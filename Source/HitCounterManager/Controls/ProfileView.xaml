<?xml version="1.0" encoding="UTF-8"?>
<!--
//MIT License

//Copyright (c) 2021-2024 Peter Kirmeier

//Permission is hereby granted, free of charge, to any person obtaining a copy
//of this software and associated documentation files (the "Software"), to deal
//in the Software without restriction, including without limitation the rights
//to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//copies of the Software, and to permit persons to whom the Software is
//furnished to do so, subject to the following conditions:

//The above copyright notice and this permission notice shall be included in all
//copies or substantial portions of the Software.

//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//SOFTWARE.
-->
<UserControl xmlns="https://github.com/avaloniaui" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:c="clr-namespace:HitCounterManager.Common;assembly=HitCounterManager.PCL"
             xmlns:vm="clr-namespace:HitCounterManager.ViewModels;assembly=HitCounterManager.PCL"
             x:Class="HitCounterManager.Controls.ProfileView"
             x:Name="ProfileViewPage">

    <UserControl.DataContext>
        <vm:ProfileViewViewModel />
    </UserControl.DataContext>

    <StackPanel Margin="10" Spacing="2" Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Top">

		<!-- Vertical statistics -->
		<StackPanel x:Name="StatsStack" Margin="0" Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Top">
			<Interaction.Behaviors>
				<DataTriggerBehavior Binding="{Binding $parent[UserControl].Bounds.Width}" ComparisonCondition="LessThanOrEqual" Value="480">
					<ChangePropertyAction PropertyName="IsVisible" Value="True" />
				</DataTriggerBehavior>
				<DataTriggerBehavior Binding="{Binding $parent[UserControl].Bounds.Width}" ComparisonCondition="GreaterThan" Value="480">
					<ChangePropertyAction PropertyName="IsVisible" Value="False" />
				</DataTriggerBehavior>
			</Interaction.Behaviors>
			<TextBlock Text="{Binding StatsProgress}"  Margin="0" HorizontalAlignment="Center" FontFamily="Arial" FontSize="14" FontWeight="Bold" />
			<TextBlock Text="{Binding StatsTime}"      Margin="0" HorizontalAlignment="Center" FontFamily="Arial" FontSize="14" FontWeight="Bold" />
			<TextBlock Text="{Binding StatsTotalHits}" Margin="0" HorizontalAlignment="Center" FontFamily="Arial" FontSize="14" FontWeight="Bold" />
		</StackPanel>
		<!-- Horizontal statistics -->
		<Grid Margin="0" HorizontalAlignment="Stretch">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" MinWidth="6"/>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" MinWidth="6"/>
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<Interaction.Behaviors>
				<DataTriggerBehavior Binding="{Binding $parent[UserControl].Bounds.Width}" ComparisonCondition="LessThanOrEqual" Value="480">
					<ChangePropertyAction PropertyName="IsVisible" Value="False" />
				</DataTriggerBehavior>
				<DataTriggerBehavior Binding="{Binding $parent[UserControl].Bounds.Width}" ComparisonCondition="GreaterThan" Value="480">
					<ChangePropertyAction PropertyName="IsVisible" Value="True" />
				</DataTriggerBehavior>
			</Interaction.Behaviors>
			<TextBlock Grid.Column="0" Text="{Binding StatsProgress}"  Margin="0" HorizontalAlignment="Left"   FontFamily="Arial" FontSize="14" FontWeight="Bold" />
			<TextBlock Grid.Column="2" Text="{Binding StatsTime}"      Margin="0" HorizontalAlignment="Center" FontFamily="Arial" FontSize="14" FontWeight="Bold" />
			<TextBlock Grid.Column="4" Text="{Binding StatsTotalHits}" Margin="0" HorizontalAlignment="Right"  FontFamily="Arial" FontSize="14" FontWeight="Bold" />
		</Grid>

        <ComboBox x:Name="profileSelector" ItemsSource="{Binding ProfileList}" SelectedItem="{Binding ProfileSelected}" HorizontalAlignment="Stretch">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Name}" />
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>

        <Grid Margin="0" RowDefinitions="Auto">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="24" MinWidth="24"></ColumnDefinition>
                <ColumnDefinition Width="*"  MinWidth="30"></ColumnDefinition>
                <ColumnDefinition Width="68"></ColumnDefinition>
                <ColumnDefinition Width="68"></ColumnDefinition>
                <ColumnDefinition Width="50"></ColumnDefinition>
                <ColumnDefinition Width="68"></ColumnDefinition>
                <ColumnDefinition Width="20"></ColumnDefinition>
                <ColumnDefinition Width="20"></ColumnDefinition>
                <ColumnDefinition Width="20"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <RelativePanel Grid.Row="0" Grid.Column="0" Margin="0" MinWidth="24" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Button Command="{Binding ToggleShowInfo}" CommandParameter="MainColumnHeaders" Classes="ImageButton" Width="18" Height="18" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Image Source="{c:LazyResource ImageInfo}" Width="18" Height="18" VerticalAlignment="Center" HorizontalAlignment="Center" />
                </Button>
            </RelativePanel>
            <TextBlock Grid.Column="1" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Left"   FontFamily="Arial" FontSize="14" FontWeight="Bold" MinWidth="30" Text="Title" />
            <TextBlock Grid.Column="2" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="Arial" FontSize="14" FontWeight="Bold" TextAlignment="Center" Text="Boss&#10;Hits" />
            <TextBlock Grid.Column="3" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="Arial" FontSize="14" FontWeight="Bold" TextAlignment="Center" Text="Way&#10;Hits" />
            <TextBlock Grid.Column="4" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="Arial" FontSize="14" FontWeight="Bold" TextAlignment="Center" Text="Diff" />
            <TextBlock Grid.Column="5" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="Arial" FontSize="14" FontWeight="Bold" TextAlignment="Center" Text="PB" />
            <TextBlock Grid.Column="6" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="Arial" FontSize="14" FontWeight="Bold" TextAlignment="Center" Text="SP" />
            <TextBlock Grid.Column="7" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="Arial" FontSize="14" FontWeight="Bold" TextAlignment="Center" Text="BP" />
            <TextBlock Grid.Column="8" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center" Text=" " />
        </Grid>
        <Border Padding="8" HorizontalAlignment="Stretch" VerticalAlignment="Top" Classes="InfoBoxBorder"
                IsVisible="{Binding ShowInfo[MainColumnHeaders].Value, Mode=OneWay}" >
            <TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center">
                <TextBlock.Text>
                    <x:String>* Titel: The name of the split.
* Boss Hits: Amount of hits taken by anything or bosses or just a marker that a boss has been defeated (depends on the configured behavior).
* Way Hits: Amount of hits taken on the way to a boss or not used at all (depends on the configured behavior). E.g. track if a boss or the way through a slit should be trained more.
* Diff: The difference between the hits taken (sum of Boss Hits and Way Hits) and the personal best hits taken.
* SP (Session Progress): Marks the farthest reached split per stream session and resets on application start. Represented by a 24 hour clock symbol.
* BP (Best Progress / Distance PB): Marks the furthest reached split of the best flawless run ever. Represented by a flag symbol.
* Trash: Removes the split from the list.</x:String>
                </TextBlock.Text>
            </TextBlock>
        </Border>

        <ItemsRepeater Margin="0" x:Name="ProfileList" ItemsSource="{Binding ProfileSelected.Rows}" HorizontalAlignment="Stretch">
            <ItemsRepeater.Layout>
                <StackLayout Spacing="0" Orientation="Vertical"/>
            </ItemsRepeater.Layout>
            <ItemsRepeater.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="2" RowDefinitions="Auto">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24" MinWidth="24"></ColumnDefinition>
                            <ColumnDefinition Width="*"  MinWidth="30"></ColumnDefinition>
                            <ColumnDefinition Width="68"></ColumnDefinition>
                            <ColumnDefinition Width="68"></ColumnDefinition>
                            <ColumnDefinition Width="50"></ColumnDefinition>
                            <ColumnDefinition Width="68"></ColumnDefinition>
                            <ColumnDefinition Width="20"></ColumnDefinition>
                            <ColumnDefinition Width="20"></ColumnDefinition>
                            <ColumnDefinition Width="20"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Interaction.Behaviors>
                            <DataTriggerBehavior Binding="{Binding Active, Mode=OneWay}" ComparisonCondition="Equal" Value="false">
                                <ChangePropertyAction TargetObject="{Binding $parent[Grid]}" PropertyName="Background" Value="Transparent" />
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{Binding Active, Mode=OneWay}" ComparisonCondition="Equal" Value="true">
                                <ChangePropertyAction TargetObject="{Binding $parent[Grid]}" PropertyName="Background" Value="Goldenrod" />
                            </DataTriggerBehavior>
                        </Interaction.Behaviors>
                        <Button Grid.Column="0" Margin="0" MinWidth="24" Classes="ImageButton" VerticalAlignment="Stretch" HorizontalAlignment="Center"
                                Command="{Binding $parent[UserControl].DataContext.CmdSetActiveSplit}" CommandParameter="{Binding .}">
                            <Image Source="{c:LazyResource ImageInactive}" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Interaction.Behaviors>
                                    <DataTriggerBehavior Binding="{Binding Active, Mode=OneWay}" ComparisonCondition="Equal" Value="false">
                                        <ChangePropertyAction TargetObject="{Binding $parent[Image]}" PropertyName="Source" Value="{c:LazyResource ImageInactive}" />
                                    </DataTriggerBehavior>
                                    <DataTriggerBehavior Binding="{Binding Active, Mode=OneWay}" ComparisonCondition="Equal" Value="true">
                                        <ChangePropertyAction TargetObject="{Binding $parent[Image]}" PropertyName="Source" Value="{c:LazyResource ImageActive}" />
                                    </DataTriggerBehavior>
                                </Interaction.Behaviors>
                            </Image>
                        </Button>
                        <TextBox Grid.Column="1" Margin="2" MinWidth="30" TextAlignment="Left" Text="{Binding Title}" Watermark="       [Empty title]" />
                        <NumericUpDown Grid.Column="2" Margin="2" HorizontalContentAlignment="Center" AllowSpin="True" ShowButtonSpinner="False" Watermark="0"
                                       Value="{Binding Hits}" Minimum="0" Maximum="{DynamicResource Int32MaxValueAsDouble}" ClipValueToMinMax="True" ParsingNumberStyle="Integer" />
                        <NumericUpDown Grid.Column="3" Margin="2" HorizontalContentAlignment="Center" AllowSpin="True" ShowButtonSpinner="False" Watermark="0"
                                       Value="{Binding WayHits}" Minimum="0" Maximum="{DynamicResource Int32MaxValueAsDouble}" ClipValueToMinMax="True" ParsingNumberStyle="Integer" />
                        <TextBlock Grid.Column="4" Margin="2" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" Text="{Binding Diff, Mode=OneWay}" />
                        <NumericUpDown Grid.Column="5" Margin="2" HorizontalContentAlignment="Center" AllowSpin="True" ShowButtonSpinner="False" Watermark="0"
                                       Value="{Binding PB}" Minimum="0" Maximum="{DynamicResource Int32MaxValueAsDouble}" ClipValueToMinMax="True" ParsingNumberStyle="Integer" />
                        <Button Grid.Column="6" Margin="0" Classes="ImageButton" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                Command="{Binding $parent[UserControl].DataContext.CmdSetSessionProgress}" CommandParameter="{Binding .}">
                            <Image Source="{c:LazyResource ImageInactive}" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Interaction.Behaviors>
                                    <DataTriggerBehavior Binding="{Binding SP, Mode=OneWay}" ComparisonCondition="Equal" Value="false">
                                        <ChangePropertyAction TargetObject="{Binding $parent[Image]}" PropertyName="Source" Value="{c:LazyResource ImageInactive}" />
                                    </DataTriggerBehavior>
                                    <DataTriggerBehavior Binding="{Binding SP, Mode=OneWay}" ComparisonCondition="Equal" Value="true">
                                        <ChangePropertyAction TargetObject="{Binding $parent[Image]}" PropertyName="Source" Value="{c:LazyResource ImageSP}" />
                                    </DataTriggerBehavior>
                                </Interaction.Behaviors>
                            </Image>
                        </Button>
                        <Button Grid.Column="7" Margin="0" Classes="ImageButton" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                Command="{Binding $parent[UserControl].DataContext.CmdSetBestProgress}" CommandParameter="{Binding .}">
                            <Image Source="{c:LazyResource ImageInactiveBP}" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Interaction.Behaviors>
                                    <DataTriggerBehavior Binding="{Binding BP, Mode=OneWay}" ComparisonCondition="Equal" Value="false">
                                        <ChangePropertyAction TargetObject="{Binding $parent[Image]}" PropertyName="Source" Value="{c:LazyResource ImageInactiveBP}" />
                                    </DataTriggerBehavior>
                                    <DataTriggerBehavior Binding="{Binding BP, Mode=OneWay}" ComparisonCondition="Equal" Value="true">
                                        <ChangePropertyAction TargetObject="{Binding $parent[Image]}" PropertyName="Source" Value="{c:LazyResource ImageBP}" />
                                    </DataTriggerBehavior>
                                </Interaction.Behaviors>
                            </Image>
                        </Button>
                        <Button Grid.Column="8" Margin="0" Classes="ImageButton" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                Command="{Binding $parent[UserControl].DataContext.CmdRemoveSplit}" CommandParameter="{Binding .}">
                            <Image Source="{c:LazyResource ImageTrash}" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Button>
                    </Grid>
                </DataTemplate>
            </ItemsRepeater.ItemTemplate>
        </ItemsRepeater>
    </StackPanel>
</UserControl>
