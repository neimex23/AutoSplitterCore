<?xml version="1.0" encoding="UTF-8"?>
<!--
//MIT License

//Copyright (c) 2021-2022 Peter Kirmeier

//Permission is hereby granted, free of charge, to any person obtaining a copy
//of this software and associated documentation files (the "Software"), to deal
//in the Software without restriction, including without limitation the rights
//to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//copies of the Software, and to permit persons to whom the Software is
//furnished to do so, subject to the following conditions:

//The above copyright notice and this permission notice shall be included in all
//copies or substantial portions of the Software.

//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//SOFTWARE.
-->
<Application xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="using:HitCounterManager"
			 xmlns:common="clr-namespace:HitCounterManager.Common;assembly=HitCounterManager"
             x:Class="HitCounterManager.App">

	<Application.Resources>
		<!-- https://www.javaer101.com/en/article/19770490.html -->
		<!-- <local:ViewModel x:Key="sharedViewModel" /> -->
		<!-- DataContext="{StaticResource sharedViewModel}" -->

		<!-- TODO: Avalonia When are ViewModels disposed, do we have to dispose by ourself?
		     https://www.reactiveui.net/docs/handbook/when-activated/
		     https://docs.avaloniaui.net/guides/deep-dives/reactiveui/view-activation -->

		<!-- Avalonia UI Dispatch https://docs.avaloniaui.net/guides/basics/accessing-the-ui-thread -->

		<!-- https://www.codeproject.com/Articles/5308645/Multiplatform-UI-Coding-with-AvaloniaUI-in-Easy-Sa lots of examples -->
		
		<!-- https://github.com/AvaloniaUI/Avalonia/issues/2605 keyframe shadow animation -->
		
		<!-- https://docs.microsoft.com/de-de/dotnet/api/system.windows.media.colors?view=net-5.0 -->

		<SolidColorBrush x:Key="ProfileResetBrush" Color="IndianRed" />
		<SolidColorBrush x:Key="ProfilePBBrush" Color="Tan" />
		<SolidColorBrush x:Key="ToggleTimerPauseBrush" Color="Gold" />
		<SolidColorBrush x:Key="HitIncreaseBrush" Color="LightSkyBlue" />
		<SolidColorBrush x:Key="HitWayIncreaseBrush" Color="LightBlue" />
		<SolidColorBrush x:Key="SplitSelectNextBrush" Color="LightGreen" />
		<SolidColorBrush x:Key="UndoBrush" Color="WhiteSmoke" />

		<Color x:Key="Accent">#FF96D1FF</Color>
		<SolidColorBrush x:Key="AccentBrush" Color="{DynamicResource Accent}" />

		<SolidColorBrush x:Key="TextBoxBackgroundBrush" Color="#66FFFFFF" /> <!-- LightTheme -> TextControlBackground -> SystemControlBackgroundAltMediumLowBrush -> SystemAltMediumLowColor -->
		<Color x:Key="TextBoxBackgroundColorLight">WhiteSmoke</Color>
		<Color x:Key="TextBoxBackgroundColorDark">#CC222222</Color> <!-- DarkTheme -> TextControlBackground -> SystemControlBackgroundAltMediumLowBrush -> SystemAltMediumLowColor -->

		<SolidColorBrush x:Key="ImageButtonBackgroundBrush" Color="Transparent" />
		<Color x:Key="ImageButtonBackgroundColorLight">Transparent</Color>
		<Color x:Key="ImageButtonBackgroundColorDark">DimGray</Color>

		<SolidColorBrush x:Key="ImageButtonLockedBackgroundBrush" Color="IndianRed" />

		<SolidColorBrush x:Key="DialogWindowBackgroundBrush" Color="#FFFFFFFF" /> <!-- LightTheme -> SystemControlBackgroundAltHighBrush -> SystemAltHighColor -->
		<Color x:Key="DialogWindowBackgroundColorDark">#FF222222</Color> <!-- AlmostBlack -->
		<Color x:Key="DialogWindowBackgroundColorLight">#FFDEB887</Color> <!-- BurlyWood -->

		<SolidColorBrush x:Key="MainWindowBackgroundBrush" Color="#FFFFFFFF" /> <!-- LightTheme -> SystemControlBackgroundAltHighBrush -> SystemAltHighColor -->
		<Color x:Key="MainWindowBackgroundColorDark">Black</Color>
		<Color x:Key="MainWindowBackgroundColorLight">Beige</Color>

	</Application.Resources>

	<Application.DataTemplates>
		<local:ViewLocator/>
	</Application.DataTemplates>

	<Application.Styles>
		<FluentTheme Mode="Light"/>
		<!-- Fluent Colors: https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Themes.Fluent/Accents/BaseLight.xaml
		                    https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Themes.Fluent/Accents/FluentControlResourcesLight.xaml -->

		<!-- Some examples how to setup styles (TOOD: check for improvements): https://github.com/AvaloniaUI/Avalonia/issues/1362#issuecomment-493026953 -->
		<Style Selector="TextBox">
			<Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}" />
		</Style>
		<Style Selector="ComboBox">
			<Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}" />
		</Style>

		<Style Selector="Button.ImageButton">
			<Setter Property="Background" Value="{DynamicResource ImageButtonBackgroundBrush}" />
		</Style>
		<Style Selector="Border.InfoBoxBorder">
			<Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="CornerRadius" Value="5" />
			<Setter Property="BoxShadow" Value="{common:BoxShadowsBuilder 'inset 1 1 4 Accent, inset -1 -1 4 Accent'}" />
		</Style>
		<Style Selector="Border.InfoBoxBorder > TextBlock">
			<Setter Property="TextWrapping" Value="Wrap" />
		</Style>
		<Style Selector="Border.HotkeyNameBoxBorder">
			<Setter Property="BorderBrush" Value="Gray" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="CornerRadius" Value="4" />
		</Style>
		<Style Selector="Border.HotkeyNameBoxBorder > TextBlock">
			<Setter Property="Foreground" Value="Black" />
		</Style>
		<Style Selector="Window.DialogWindow">
			<Setter Property="Background" Value="{DynamicResource DialogWindowBackgroundBrush}" />
			<Setter Property="WindowStartupLocation" Value="CenterOwner" />
			<Setter Property="ShowInTaskbar" Value="False" />
		</Style>

	</Application.Styles>

</Application>
