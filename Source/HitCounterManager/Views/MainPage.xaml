<?xml version="1.0" encoding="UTF-8"?>
<!--
//MIT License

//Copyright (c) 2021-2022 Peter Kirmeier

//Permission is hereby granted, free of charge, to any person obtaining a copy
//of this software and associated documentation files (the "Software"), to deal
//in the Software without restriction, including without limitation the rights
//to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//copies of the Software, and to permit persons to whom the Software is
//furnished to do so, subject to the following conditions:

//The above copyright notice and this permission notice shall be included in all
//copies or substantial portions of the Software.

//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//SOFTWARE.
-->
<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:app="clr-namespace:HitCounterManager;assembly=HitCounterManager"
        xmlns:common="clr-namespace:HitCounterManager.Common;assembly=HitCounterManager"
        xmlns:local="clr-namespace:HitCounterManager.ViewModels;assembly=HitCounterManager"
        xmlns:controls="clr-namespace:HitCounterManager.Controls;assembly=HitCounterManager"
        x:Class="HitCounterManager.Views.MainPage"
        x:DataType="local:MainPageViewModel"
        Icon="/Resources/FireIcon.ico"
        Title="{x:Static common:Statics.ApplicationTitle}"
        MinWidth="540" MinHeight="344"
        Background="{DynamicResource MainWindowBackgroundBrush}">

    <!-- TODO: Tooltips -->

    <Window.DataContext>
        <local:MainPageViewModel />
    </Window.DataContext>

    <ScrollViewer Padding="0,0,30,0" Margin="6,4,0,0" AllowAutoHide="false">
        <StackPanel Margin="0" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Stretch">

            <Grid Margin="2" ColumnDefinitions="26,26,26,26,26,26,10,26,26,26,26,10,26,26,26,26,10,26,26,26,*" RowDefinitions="28" HorizontalAlignment="Stretch">
                <RelativePanel Grid.Column="0" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Button Command="{Binding NavigateToSettings}" Classes="ImageButton">
                        <Image Source="{common:ImageFromResource Resource=/Resources/Images/icons8-settings-20.png}" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Button>
                </RelativePanel>
                <RelativePanel Grid.Column="1" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Button Command="{Binding SaveToDisk}" Classes="ImageButton">
                        <Image Source="{common:ImageFromResource Resource=/Resources/Images/icons8-save-20.png}" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Button>
                </RelativePanel>
                <RelativePanel Grid.Column="2" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Button Command="{Binding OpenWebsiteHome}" Classes="ImageButton">
                        <Image Source="{common:ImageFromResource Resource=/Resources/Images/icons8-website-20.png}" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Button>
                </RelativePanel>
                <RelativePanel Grid.Column="3" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Button Command="{Binding OpenWebsiteTeamHitless}" Classes="ImageButton">
                        <Image Source="{common:ImageFromResource Resource=/Resources/Images/20p_logo_black.png}" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Button>
                </RelativePanel>
                <RelativePanel Grid.Column="4" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Button Command="{Binding CheckUpdatesOnline}" Classes="ImageButton">
                        <Image Source="{common:ImageFromResource Resource=/Resources/Images/icons8-cloud-20.png}" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Button>
                </RelativePanel>
                <RelativePanel Grid.Column="5" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Button Command="{Binding NavigateToAbout}" Classes="ImageButton">
                        <Image Source="{common:ImageFromResource Resource=/Resources/Images/icons8-about-20.png}" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Button>
                </RelativePanel>
                <!-- Spacer Row -->
                <RelativePanel Grid.Column="7" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Button Command="{Binding NavigateToProfileAction}" CommandParameter="{x:Static local:ProfileAction.Create}" Classes="ImageButton">
                        <Image Source="{common:ImageFromResource Resource=/Resources/Images/icons8-add-20.png}" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <Interaction.Behaviors>
                            <DataTriggerBehavior Binding="{Binding #profileView.DataContext.IsReadOnly}" ComparisonCondition="Equal" Value="true">
                                <ChangePropertyAction TargetObject="{Binding $parent[Button]}" PropertyName="Background" Value="{DynamicResource ImageButtonLockedBackgroundBrush}" />
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{Binding #profileView.DataContext.IsReadOnly}" ComparisonCondition="Equal" Value="false">
                                <ChangePropertyAction TargetObject="{Binding $parent[Button]}" PropertyName="Background" Value="{DynamicResource ImageButtonBackgroundBrush}" />
                            </DataTriggerBehavior>
                        </Interaction.Behaviors>
                    </Button>
                </RelativePanel>
                <RelativePanel Grid.Column="8" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Button Command="{Binding NavigateToProfileAction}" CommandParameter="{x:Static local:ProfileAction.Rename}" Classes="ImageButton">
                        <Image Source="{common:ImageFromResource Resource=/Resources/Images/icons8-edit-20.png}" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <Interaction.Behaviors>
                            <DataTriggerBehavior Binding="{Binding #profileView.DataContext.IsReadOnly}" ComparisonCondition="Equal" Value="true">
                                <ChangePropertyAction TargetObject="{Binding $parent[Button]}" PropertyName="Background" Value="{DynamicResource ImageButtonLockedBackgroundBrush}" />
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{Binding #profileView.DataContext.IsReadOnly}" ComparisonCondition="Equal" Value="false">
                                <ChangePropertyAction TargetObject="{Binding $parent[Button]}" PropertyName="Background" Value="{DynamicResource ImageButtonBackgroundBrush}" />
                            </DataTriggerBehavior>
                        </Interaction.Behaviors>
                    </Button>
                </RelativePanel>
                <RelativePanel Grid.Column="9" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Button Command="{Binding NavigateToProfileAction}" CommandParameter="{x:Static local:ProfileAction.Copy}" Classes="ImageButton">
                        <Image Source="{common:ImageFromResource Resource=/Resources/Images/icons8-copy-20.png}" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <Interaction.Behaviors>
                            <DataTriggerBehavior Binding="{Binding #profileView.DataContext.IsReadOnly}" ComparisonCondition="Equal" Value="true">
                                <ChangePropertyAction TargetObject="{Binding $parent[Button]}" PropertyName="Background" Value="{DynamicResource ImageButtonLockedBackgroundBrush}" />
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{Binding #profileView.DataContext.IsReadOnly}" ComparisonCondition="Equal" Value="false">
                                <ChangePropertyAction TargetObject="{Binding $parent[Button]}" PropertyName="Background" Value="{DynamicResource ImageButtonBackgroundBrush}" />
                            </DataTriggerBehavior>
                        </Interaction.Behaviors>
                    </Button>
                </RelativePanel>
                <RelativePanel Grid.Column="10" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Button Command="{Binding NavigateToProfileAction}" CommandParameter="{x:Static local:ProfileAction.Delete}" Classes="ImageButton">
                        <Image Source="{common:ImageFromResource Resource=/Resources/Images/icons8-trash-20.png}" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <Interaction.Behaviors>
                            <DataTriggerBehavior Binding="{Binding #profileView.DataContext.IsReadOnly}" ComparisonCondition="Equal" Value="true">
                                <ChangePropertyAction TargetObject="{Binding $parent[Button]}" PropertyName="Background" Value="{DynamicResource ImageButtonLockedBackgroundBrush}" />
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{Binding #profileView.DataContext.IsReadOnly}" ComparisonCondition="Equal" Value="false">
                                <ChangePropertyAction TargetObject="{Binding $parent[Button]}" PropertyName="Background" Value="{DynamicResource ImageButtonBackgroundBrush}" />
                            </DataTriggerBehavior>
                        </Interaction.Behaviors>
                    </Button>
                </RelativePanel>
                <!-- Spacer Row -->
                <RelativePanel Grid.Column="12" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Button Command="{Binding NavigateToSetAttempts}" Classes="ImageButton">
                        <Image Source="{common:ImageFromResource Resource=/Resources/Images/icons8-counter-20.png}" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Button>
                </RelativePanel>
                <RelativePanel Grid.Column="13" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Button Command="{Binding #profileView.DataContext.ProfileSplitMoveUp}" Classes="ImageButton">
                        <Image Source="{common:ImageFromResource Resource=/Resources/Images/icons8-scroll-up-20.png}" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <Interaction.Behaviors>
                            <DataTriggerBehavior Binding="{Binding #profileView.DataContext.IsReadOnly}" ComparisonCondition="Equal" Value="true">
                                <ChangePropertyAction TargetObject="{Binding $parent[Button]}" PropertyName="Background" Value="{DynamicResource ImageButtonLockedBackgroundBrush}" />
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{Binding #profileView.DataContext.IsReadOnly}" ComparisonCondition="Equal" Value="false">
                                <ChangePropertyAction TargetObject="{Binding $parent[Button]}" PropertyName="Background" Value="{DynamicResource ImageButtonBackgroundBrush}" />
                            </DataTriggerBehavior>
                        </Interaction.Behaviors>
                    </Button>
                </RelativePanel>
                <RelativePanel Grid.Column="14" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Button Command="{Binding #profileView.DataContext.ProfileSplitMoveDown}" Classes="ImageButton">
                        <Image Source="{common:ImageFromResource Resource=/Resources/Images/icons8-scroll-down-20.png}" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <Interaction.Behaviors>
                            <DataTriggerBehavior Binding="{Binding #profileView.DataContext.IsReadOnly}" ComparisonCondition="Equal" Value="true">
                                <ChangePropertyAction TargetObject="{Binding $parent[Button]}" PropertyName="Background" Value="{DynamicResource ImageButtonLockedBackgroundBrush}" />
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{Binding #profileView.DataContext.IsReadOnly}" ComparisonCondition="Equal" Value="false">
                                <ChangePropertyAction TargetObject="{Binding $parent[Button]}" PropertyName="Background" Value="{DynamicResource ImageButtonBackgroundBrush}" />
                            </DataTriggerBehavior>
                        </Interaction.Behaviors>
                    </Button>
                </RelativePanel>
                <RelativePanel Grid.Column="15" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Button Command="{Binding #profileView.DataContext.ProfileSplitInsert}" Classes="ImageButton">
                        <Image Source="{common:ImageFromResource Resource=/Resources/Images/icons8-add-list-20.png}" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <Interaction.Behaviors>
                            <DataTriggerBehavior Binding="{Binding #profileView.DataContext.IsReadOnly}" ComparisonCondition="Equal" Value="true">
                                <ChangePropertyAction TargetObject="{Binding $parent[Button]}" PropertyName="Background" Value="{DynamicResource ImageButtonLockedBackgroundBrush}" />
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{Binding #profileView.DataContext.IsReadOnly}" ComparisonCondition="Equal" Value="false">
                                <ChangePropertyAction TargetObject="{Binding $parent[Button]}" PropertyName="Background" Value="{DynamicResource ImageButtonBackgroundBrush}" />
                            </DataTriggerBehavior>
                        </Interaction.Behaviors>
                    </Button>
                </RelativePanel>
                <!-- Spacer Row -->
                <RelativePanel Grid.Column="17" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Button Command="{Binding #profileView.DataContext.ToggleReadOnlyMode}" Classes="ImageButton">
                        <Image Source="{common:ImageFromResource Resource=/Resources/Images/icons8-padlock-20.png}" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <Interaction.Behaviors>
                            <DataTriggerBehavior Binding="{Binding #profileView.DataContext.IsReadOnly}" ComparisonCondition="Equal" Value="true">
                                <ChangePropertyAction TargetObject="{Binding $parent[Button]}" PropertyName="Background" Value="{DynamicResource ImageButtonLockedBackgroundBrush}" />
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{Binding #profileView.DataContext.IsReadOnly}" ComparisonCondition="Equal" Value="false">
                                <ChangePropertyAction TargetObject="{Binding $parent[Button]}" PropertyName="Background" Value="{DynamicResource ImageButtonBackgroundBrush}" />
                            </DataTriggerBehavior>
                        </Interaction.Behaviors>
                    </Button>
                </RelativePanel>
                <RelativePanel Grid.Column="18" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Button Command="{Binding ToggleAlwaysOnTop}" Classes="ImageButton">
                        <Image Source="{common:ImageFromResource Resource=/Resources/Images/icons8-pin-20.png}" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <Interaction.Behaviors>
                            <DataTriggerBehavior Binding="{Binding AlwaysOnTop}" ComparisonCondition="Equal" Value="true">
                                <ChangePropertyAction TargetObject="{Binding $parent[Button]}" PropertyName="Background" Value="{DynamicResource ImageButtonLockedBackgroundBrush}" />
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{Binding AlwaysOnTop}" ComparisonCondition="Equal" Value="false">
                                <ChangePropertyAction TargetObject="{Binding $parent[Button]}" PropertyName="Background" Value="{DynamicResource ImageButtonBackgroundBrush}" />
                            </DataTriggerBehavior>
                        </Interaction.Behaviors>
                    </Button>
                </RelativePanel>
                <RelativePanel Grid.Column="19" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Button Command="{Binding ToggleDarkMode}" Classes="ImageButton">
                        <Image Source="{common:ImageFromResource Resource=/Resources/Images/icons8-taschenlampe-20.png}" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Button>
                </RelativePanel>
            </Grid>

            <Grid Margin="2" RowDefinitions="46" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="82" />
                    <ColumnDefinition Width="82" />
                    <ColumnDefinition Width="82" />
                    <ColumnDefinition Width="*" MinWidth="82"/>
                    <ColumnDefinition Width="82" />
                    <ColumnDefinition Width="82" />
                </Grid.ColumnDefinitions>
                <controls:FramedImageButton Grid.Column="0" MainColor="{DynamicResource ProfileResetBrush}"
                        ImgSrc="{common:ImageFromResource Resource=/Resources/Images/icons8-repeat-one-32.png}"
                        OnClickCommand="{Binding #profileView.DataContext.ProfileReset}" />
                <controls:FramedImageButton Grid.Column="1" MainColor="{DynamicResource ProfilePBBrush}"
                        ImgSrc="{common:ImageFromResource Resource=/Resources/Images/icons8-trophy-32.png}"
                        OnClickCommand="{Binding #profileView.DataContext.ProfilePB}" />
                <controls:FramedImageButton Grid.Column="2" MainColor="{DynamicResource ToggleTimerPauseBrush}"
                        OnClickCommand="{Binding #profileView.DataContext.ToggleTimerPause}">
                    <Interaction.Behaviors>
                        <DataTriggerBehavior Binding="{Binding #profileView.DataContext.TimerRunning}" ComparisonCondition="Equal" Value="true">
                            <ChangePropertyAction TargetObject="{Binding $parent[controls:FramedImageButton]}" PropertyName="ImgSrc" Value="{common:ImageFromResource Resource=/Resources/Images/icons8-sleep-32.png}" />
                        </DataTriggerBehavior>
                        <DataTriggerBehavior Binding="{Binding #profileView.DataContext.TimerRunning}" ComparisonCondition="Equal" Value="false">
                            <ChangePropertyAction TargetObject="{Binding $parent[controls:FramedImageButton]}" PropertyName="ImgSrc" Value="{common:ImageFromResource Resource=/Resources/Images/icons8-time-32.png}" />
                        </DataTriggerBehavior>
                    </Interaction.Behaviors>
                </controls:FramedImageButton>
                <controls:FramedImageButton Grid.Column="3" MainColor="{DynamicResource HitIncreaseBrush}"
                        ImgSrc="{common:ImageFromResource Resource=/Resources/Images/icons8-attack-32.png}"
                        OnClickCommand="{Binding #profileView.DataContext.HitIncrease}" />
                <controls:FramedImageButton Grid.Column="4" MainColor="{DynamicResource HitWayIncreaseBrush}"
                        ImgSrc="{common:ImageFromResource Resource=/Resources/Images/icons8-watch-your-step-32.png}"
                        OnClickCommand="{Binding #profileView.DataContext.HitWayIncrease}" />
                <controls:FramedImageButton Grid.Column="5" MainColor="{DynamicResource SplitSelectNextBrush}"
                        ImgSrc="{common:ImageFromResource Resource=/Resources/Images/icons8-staircase-32.png}"
                        OnClickCommand="{Binding #profileView.DataContext.SplitSelectNext}" />
            </Grid>

            <controls:ProfileView Padding="0" Margin="0" x:Name="profileView"/>

        </StackPanel>
    </ScrollViewer>
</Window>
