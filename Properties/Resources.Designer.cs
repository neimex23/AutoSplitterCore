//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutoSplitterCore.Properties {
    using System;
    
    
    /// <summary>
    ///   Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
    /// </summary>
    // StronglyTypedResourceBuilder generó automáticamente esta clase
    // a través de una herramienta como ResGen o Visual Studio.
    // Para agregar o quitar un miembro, edite el archivo .ResX y, a continuación, vuelva a ejecutar ResGen
    // con la opción /str o recompile su proyecto de VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AutoSplitterCore.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
        ///   búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Start: Triggered when the Start Trigger produces an HCM Timer activation.
        ///Split: Triggered when the SplitFlag Trigger generates an HCM Split.
        ///Reset: Triggered when the Reset Trigger initiates an HCM Restart Run.
        /// </summary>
        public static string ASLInfo {
            get {
                return ResourceManager.GetString("ASLInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Byte[].
        /// </summary>
        public static byte[] AUTOSPLITTERREADME {
            get {
                object obj = ResourceManager.GetObject("AUTOSPLITTERREADME", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Byte[].
        /// </summary>
        public static byte[] AutoSplitterSetup {
            get {
                object obj = ResourceManager.GetObject("AutoSplitterSetup", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap AutoSplitterSetupIcon {
            get {
                object obj = ResourceManager.GetObject("AutoSplitterSetupIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Check {
            get {
                object obj = ResourceManager.GetObject("Check", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Mortal Journey run should be activated if you run play this gauntlet,
        ///Work by trigger of positions and split after loading events.
        ///And not check if you run not is this.
        ///Split Automatically the next bosses in this order 
        ///17 splits no more and no less:
        ///
        ///Gyoubu
        ///Lady Butterfly
        ///Genichiro
        ///Guardian Ape
        ///Corrupted Monk
        ///Owl
        ///Double Apes
        ///Emma
        ///Isshin
        ///True Monk
        ///Owl Father
        ///Demon of Hatred
        ///Genichiro Way of Tomoe
        ///Sword Saint Isshin
        ///Inner Genichiro
        ///Inner Father
        ///Inner Isshin .
        /// </summary>
        public static string MortalJourney {
            get {
                return ResourceManager.GetString("MortalJourney", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Considerations when uploading or downloading a profile:
        ///
        ///- The currently active profile will be uploaded, you can see the information in the corresponding box, the description and name must be clear.
        ///- Any Upload Profile must be suggestion to approved, check Terms and Conditions to avoid problems.
        ///- When uploading the autosplitter flags will be reset
        ///
        ///- Configurations such as:
        ///     * Selected Splitter,
        ///      * Update Check
        ///      * AutoResetSplits,
        ///      * Visual Style
        ///      * Custom Profile Path,
        ///      * Au [resto de la cadena truncado]&quot;;.
        /// </summary>
        public static string ProfileWarning {
            get {
                return ResourceManager.GetString("ProfileWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Soul Memory is an extension for LiveSplit, developed by FrankvdStam, designed to enhance AutoSplit functionality across all Souls games.
        ///It is a major dependency for AutoSplitterCore, and keeping it up-to-date is highly recommended to avoid bugs and improve performance.
        ///
        ///[-] Why Keep Soul Memory Updated?
        ///   Bug Prevention: Outdated versions can cause unexpected issues.
        ///   Optimized Performance: New updates often include performance improvements.
        ///   Compatibility: Ensures smooth integration with the latest v [resto de la cadena truncado]&quot;;.
        /// </summary>
        public static string SoulsMemoryNotice {
            get {
                return ResourceManager.GetString("SoulsMemoryNotice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Byte[].
        /// </summary>
        public static byte[] THIRDPARTYLICENSEREADME {
            get {
                object obj = ResourceManager.GetObject("THIRDPARTYLICENSEREADME", resourceCulture);
                return ((byte[])(obj));
            }
        }
    }
}
