<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.SecretsManager</name>
    </assembly>
    <members>
        <member name="T:Amazon.SecretsManager.AmazonSecretsManagerConfig">
            <summary>
            Configuration for accessing Amazon SecretsManager service
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.AmazonSecretsManagerConfig.ServiceId">
            <summary>
             The ServiceId, which is the unique identifier for a service.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.AmazonSecretsManagerConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.AmazonSecretsManagerConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.AmazonSecretsManagerConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.AmazonSecretsManagerDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon SecretsManager service
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            SecretsManager
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.AmazonSecretsManagerDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.AmazonSecretsManagerDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.AmazonSecretsManagerDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.AmazonSecretsManagerDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.AmazonSecretsManagerDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.AmazonSecretsManagerDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Endpoints.SecretsManagerEndpointParameters">
            <summary>
            Contains parameters used for resolving SecretsManager endpoints
            Parameters can be sourced from client config and service operations
            Used by internal SecretsManagerEndpointProvider and SecretsManagerEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Endpoints.SecretsManagerEndpointParameters.#ctor">
            <summary>
            SecretsManagerEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Endpoints.SecretsManagerEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Endpoints.SecretsManagerEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Endpoints.SecretsManagerEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Endpoints.SecretsManagerEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.AmazonSecretsManagerException">
            <summary>
             Common exception for the SecretsManager service.
             </summary>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonSecretsManagerException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonSecretsManagerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonSecretsManagerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonSecretsManagerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonSecretsManagerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.SecretsManager.Internal.AmazonSecretsManagerEndpointProvider">
            <summary>
            Amazon SecretsManager endpoint provider.
            Resolves endpoint for given set of SecretsManagerEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Internal.AmazonSecretsManagerEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for SecretsManagerEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Internal.AmazonSecretsManagerEndpointResolver">
            <summary>
            Amazon SecretsManager endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for SecretsManager service requests.
            Collects values for SecretsManagerEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses SecretsManagerEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Internal.AmazonSecretsManagerMetadata">
            <summary>
            Service metadata for  Amazon SecretsManager service
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Internal.AmazonSecretsManagerMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Internal.AmazonSecretsManagerMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.AmazonSecretsManagerRequest">
            <summary>
            Base class for SecretsManager operation requests.
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.APIErrorType">
            <summary>
            The error Secrets Manager encountered while retrieving an individual secret as part
            of <a>BatchGetSecretValue</a>.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.APIErrorType.ErrorCode">
            <summary>
            Gets and sets the property ErrorCode. 
            <para>
            The error Secrets Manager encountered while retrieving an individual secret as part
            of <a>BatchGetSecretValue</a>, for example <c>ResourceNotFoundException</c>,<c>InvalidParameterException</c>,
            <c>InvalidRequestException</c>, <c>DecryptionFailure</c>, or <c>AccessDeniedException</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.APIErrorType.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message describing the error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.APIErrorType.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The ARN or name of the secret.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.BatchGetSecretValueRequest">
            <summary>
            Container for the parameters to the BatchGetSecretValue operation.
            Retrieves the contents of the encrypted fields <c>SecretString</c> or <c>SecretBinary</c>
            for up to 20 secrets. To retrieve a single secret, call <a>GetSecretValue</a>. 
            
             
            <para>
            To choose which secrets to retrieve, you can specify a list of secrets by name or
            ARN, or you can use filters. If Secrets Manager encounters errors such as <c>AccessDeniedException</c>
            while attempting to retrieve any of the secrets, you can see the errors in <c>Errors</c>
            in the response.
            </para>
             
            <para>
            Secrets Manager generates CloudTrail <c>GetSecretValue</c> log entries for each secret
            you request when you call this action. Do not include sensitive information in request
            parameters because it might be logged. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:BatchGetSecretValue</c>, and you
            must have <c>secretsmanager:GetSecretValue</c> for each secret. If you use filters,
            you must also have <c>secretsmanager:ListSecrets</c>. If the secrets are encrypted
            using customer-managed keys instead of the Amazon Web Services managed key <c>aws/secretsmanager</c>,
            then you also need <c>kms:Decrypt</c> permissions for the keys. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.BatchGetSecretValueRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            The filters to choose which secrets to retrieve. You must include <c>Filters</c> or
            <c>SecretIdList</c>, but not both.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.BatchGetSecretValueRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The number of results to include in the response.
            </para>
             
            <para>
            If there are more results available, in the response, Secrets Manager includes <c>NextToken</c>.
            To get the next results, call <c>BatchGetSecretValue</c> again with the value from
            <c>NextToken</c>. To use this parameter, you must also use the <c>Filters</c> parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.BatchGetSecretValueRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A token that indicates where the output should continue from, if a previous call did
            not show all results. To get the next results, call <c>BatchGetSecretValue</c> again
            with this value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.BatchGetSecretValueRequest.SecretIdList">
            <summary>
            Gets and sets the property SecretIdList. 
            <para>
            The ARN or names of the secrets to retrieve. You must include <c>Filters</c> or <c>SecretIdList</c>,
            but not both.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.BatchGetSecretValueResponse">
            <summary>
            This is the response object from the BatchGetSecretValue operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.BatchGetSecretValueResponse.Errors">
            <summary>
            Gets and sets the property Errors. 
            <para>
            A list of errors Secrets Manager encountered while attempting to retrieve individual
            secrets.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.BatchGetSecretValueResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Secrets Manager includes this value if there's more output available than what is
            included in the current response. This can occur even when the response includes no
            values at all, such as when you ask for a filtered view of a long list. To get the
            next results, call <c>BatchGetSecretValue</c> again with this value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.BatchGetSecretValueResponse.SecretValues">
            <summary>
            Gets and sets the property SecretValues. 
            <para>
            A list of secret values.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.CancelRotateSecretRequest">
            <summary>
            Container for the parameters to the CancelRotateSecret operation.
            Turns off automatic rotation, and if a rotation is currently in progress, cancels
            the rotation.
            
             
            <para>
            If you cancel a rotation in progress, it can leave the <c>VersionStage</c> labels
            in an unexpected state. You might need to remove the staging label <c>AWSPENDING</c>
            from the partially created version. You also need to determine whether to roll back
            to the previous version of the secret by moving the staging label <c>AWSCURRENT</c>
            to the version that has <c>AWSPENDING</c>. To determine which version has a specific
            staging label, call <a>ListSecretVersionIds</a>. Then use <a>UpdateSecretVersionStage</a>
            to change staging labels. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_how.html">How
            rotation works</a>.
            </para>
             
            <para>
            To turn on automatic rotation again, call <a>RotateSecret</a>.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:CancelRotateSecret</c>. For more
            information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CancelRotateSecretRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The ARN or name of the secret.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.CancelRotateSecretResponse">
            <summary>
            This is the response object from the CancelRotateSecret operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CancelRotateSecretResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CancelRotateSecretResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CancelRotateSecretResponse.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            The unique identifier of the version of the secret created during the rotation. This
            version might not be complete, and should be evaluated for possible deletion. We recommend
            that you remove the <c>VersionStage</c> value <c>AWSPENDING</c> from this version
            so that Secrets Manager can delete it. Failing to clean up a cancelled rotation can
            block you from starting future rotations.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.CreateSecretRequest">
            <summary>
            Container for the parameters to the CreateSecret operation.
            Creates a new secret. A <i>secret</i> can be a password, a set of credentials such
            as a user name and password, an OAuth token, or other secret information that you
            store in an encrypted form in Secrets Manager. The secret also includes the connection
            information to access a database or other service, which Secrets Manager doesn't encrypt.
            A secret in Secrets Manager consists of both the protected secret data and the important
            information needed to manage the secret.
            
             
            <para>
            For secrets that use <i>managed rotation</i>, you need to create the secret through
            the managing service. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            Manager secrets managed by other Amazon Web Services services</a>. 
            </para>
             
            <para>
            For information about creating a secret in the console, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/manage_create-basic-secret.html">Create
            a secret</a>.
            </para>
             
            <para>
            To create a secret, you can provide the secret value to be encrypted in either the
            <c>SecretString</c> parameter or the <c>SecretBinary</c> parameter, but not both.
            If you include <c>SecretString</c> or <c>SecretBinary</c> then Secrets Manager creates
            an initial secret version and automatically attaches the staging label <c>AWSCURRENT</c>
            to it.
            </para>
             
            <para>
            For database credentials you want to rotate, for Secrets Manager to be able to rotate
            the secret, you must make sure the JSON you store in the <c>SecretString</c> matches
            the <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_secret_json_structure.html">JSON
            structure of a database secret</a>.
            </para>
             
            <para>
            If you don't specify an KMS encryption key, Secrets Manager uses the Amazon Web Services
            managed key <c>aws/secretsmanager</c>. If this key doesn't already exist in your account,
            then Secrets Manager creates it for you automatically. All users and roles in the
            Amazon Web Services account automatically have access to use <c>aws/secretsmanager</c>.
            Creating <c>aws/secretsmanager</c> can result in a one-time significant delay in returning
            the result.
            </para>
             
            <para>
            If the secret is in a different Amazon Web Services account from the credentials calling
            the API, then you can't use <c>aws/secretsmanager</c> to encrypt the secret, and you
            must create and use a customer managed KMS key. 
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters except <c>SecretBinary</c> or
            <c>SecretString</c> because it might be logged. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:CreateSecret</c>. If you include
            tags in the secret, you also need <c>secretsmanager:TagResource</c>. To add replica
            Regions, you must also have <c>secretsmanager:ReplicateSecretToRegions</c>. For more
            information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
             
            <para>
            To encrypt the secret with a KMS key other than <c>aws/secretsmanager</c>, you need
            <c>kms:GenerateDataKey</c> and <c>kms:Decrypt</c> permission to the key. 
            </para>
             <important> 
            <para>
            When you enter commands in a command shell, there is a risk of the command history
            being accessed or utilities having access to your command parameters. This is a concern
            if the command includes the value of a secret. Learn how to <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/security_cli-exposure-risks.html">Mitigate
            the risks of using command-line tools to store Secrets Manager secrets</a>.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretRequest.AddReplicaRegions">
            <summary>
            Gets and sets the property AddReplicaRegions. 
            <para>
            A list of Regions and KMS keys to replicate secrets.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            If you include <c>SecretString</c> or <c>SecretBinary</c>, then Secrets Manager creates
            an initial version for the secret, and this parameter specifies the unique identifier
            for the new version. 
            </para>
             <note> 
            <para>
            If you use the Amazon Web Services CLI or one of the Amazon Web Services SDKs to call
            this operation, then you can leave this parameter empty. The CLI or SDK generates
            a random UUID for you and includes it as the value for this parameter in the request.
            
            </para>
             </note> 
            <para>
            If you generate a raw HTTP request to the Secrets Manager service endpoint, then you
            must generate a <c>ClientRequestToken</c> and include it in the request.
            </para>
             
            <para>
            This value helps ensure idempotency. Secrets Manager uses this value to prevent the
            accidental creation of duplicate versions if there are failures and retries during
            a rotation. We recommend that you generate a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID-type</a>
            value to ensure uniqueness of your versions within the specified secret. 
            </para>
             <ul> <li> 
            <para>
            If the <c>ClientRequestToken</c> value isn't already associated with a version of
            the secret then a new version of the secret is created. 
            </para>
             </li> <li> 
            <para>
            If a version with this value already exists and the version <c>SecretString</c> and
            <c>SecretBinary</c> values are the same as those in the request, then the request
            is ignored.
            </para>
             </li> <li> 
            <para>
            If a version with this value already exists and that version's <c>SecretString</c>
            and <c>SecretBinary</c> values are different from those in the request, then the request
            fails because you cannot modify an existing version. Instead, use <a>PutSecretValue</a>
            to create a new version.
            </para>
             </li> </ul> 
            <para>
            This value becomes the <c>VersionId</c> of the new version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretRequest.ForceOverwriteReplicaSecret">
            <summary>
            Gets and sets the property ForceOverwriteReplicaSecret. 
            <para>
            Specifies whether to overwrite a secret with the same name in the destination Region.
            By default, secrets aren't overwritten.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The ARN, key ID, or alias of the KMS key that Secrets Manager uses to encrypt the
            secret value in the secret. An alias is always prefixed by <c>alias/</c>, for example
            <c>alias/aws/secretsmanager</c>. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/alias-about.html">About
            aliases</a>.
            </para>
             
            <para>
            To use a KMS key in a different account, use the key ARN or the alias ARN.
            </para>
             
            <para>
            If you don't specify this value, then Secrets Manager uses the key <c>aws/secretsmanager</c>.
            If that key doesn't yet exist, then Secrets Manager creates it for you automatically
            the first time it encrypts the secret value.
            </para>
             
            <para>
            If the secret is in a different Amazon Web Services account from the credentials calling
            the API, then you can't use <c>aws/secretsmanager</c> to encrypt the secret, and you
            must create and use a customer managed KMS key. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the new secret.
            </para>
             
            <para>
            The secret name can contain ASCII letters, numbers, and the following characters:
            /_+=.@-
            </para>
             
            <para>
            Do not end your secret name with a hyphen followed by six characters. If you do so,
            you risk confusion and unexpected results when searching for a secret by partial ARN.
            Secrets Manager automatically adds a hyphen and six random characters after the secret
            name at the end of the ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretRequest.SecretBinary">
            <summary>
            Gets and sets the property SecretBinary. 
            <para>
            The binary data to encrypt and store in the new version of the secret. We recommend
            that you store your binary data in a file and then pass the contents of the file as
            a parameter.
            </para>
             
            <para>
            Either <c>SecretString</c> or <c>SecretBinary</c> must have a value, but not both.
            </para>
             
            <para>
            This parameter is not available in the Secrets Manager console.
            </para>
             
            <para>
            Sensitive: This field contains sensitive information, so the service does not include
            it in CloudTrail log entries. If you create your own log entries, you must also avoid
            logging the information in this field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretRequest.SecretString">
            <summary>
            Gets and sets the property SecretString. 
            <para>
            The text data to encrypt and store in this new version of the secret. We recommend
            you use a JSON structure of key/value pairs for your secret value.
            </para>
             
            <para>
            Either <c>SecretString</c> or <c>SecretBinary</c> must have a value, but not both.
            </para>
             
            <para>
            If you create a secret by using the Secrets Manager console then Secrets Manager puts
            the protected secret text in only the <c>SecretString</c> parameter. The Secrets Manager
            console stores the information as a JSON structure of key/value pairs that a Lambda
            rotation function can parse.
            </para>
             
            <para>
            Sensitive: This field contains sensitive information, so the service does not include
            it in CloudTrail log entries. If you create your own log entries, you must also avoid
            logging the information in this field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags to attach to the secret. Each tag is a key and value pair of strings
            in a JSON text string, for example:
            </para>
             
            <para>
             <c>[{"Key":"CostCenter","Value":"12345"},{"Key":"environment","Value":"production"}]</c>
            
            </para>
             
            <para>
            Secrets Manager tag key names are case sensitive. A tag with the key "ABC" is a different
            tag from one with key "abc".
            </para>
             
            <para>
            If you check tags in permissions policies as part of your security strategy, then
            adding or removing a tag can change permissions. If the completion of this operation
            would result in you losing your permissions for this secret, then Secrets Manager
            blocks the operation and returns an <c>Access Denied</c> error. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html#tag-secrets-abac">Control
            access to secrets using tags</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html#auth-and-access_tags2">Limit
            access to identities with tags that match secrets' tags</a>.
            </para>
             
            <para>
            For information about how to format a JSON parameter for the various command line
            tool environments, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-using-param.html#cli-using-param-json">Using
            JSON for Parameters</a>. If your command-line tool or SDK requires quotation marks
            around the parameter, you should use single quotes to avoid confusion with the double
            quotes required in the JSON text.
            </para>
             
            <para>
            For tag quotas and naming restrictions, see <a href="https://docs.aws.amazon.com/general/latest/gr/arg.html#taged-reference-quotas">Service
            quotas for Tagging</a> in the <i>Amazon Web Services General Reference guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.CreateSecretResponse">
            <summary>
            This is the response object from the CreateSecret operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the new secret. The ARN includes the name of the secret followed by six
            random characters. This ensures that if you create a new secret with the same name
            as a deleted secret, then users with access to the old secret don't get access to
            the new secret because the ARNs are different.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the new secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretResponse.ReplicationStatus">
            <summary>
            Gets and sets the property ReplicationStatus. 
            <para>
            A list of the replicas of this secret and their status:
            </para>
             <ul> <li> 
            <para>
             <c>Failed</c>, which indicates that the replica was not created.
            </para>
             </li> <li> 
            <para>
             <c>InProgress</c>, which indicates that Secrets Manager is in the process of creating
            the replica.
            </para>
             </li> <li> 
            <para>
             <c>InSync</c>, which indicates that the replica was created.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.CreateSecretResponse.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            The unique identifier associated with the version of the new secret.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.DecryptionFailureException">
            <summary>
            Secrets Manager can't decrypt the protected secret text using the provided KMS key.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.DecryptionFailureException.#ctor(System.String)">
            <summary>
            Constructs a new DecryptionFailureException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.DecryptionFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DecryptionFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.DecryptionFailureException.#ctor(System.Exception)">
            <summary>
            Construct instance of DecryptionFailureException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.DecryptionFailureException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DecryptionFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.DecryptionFailureException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DecryptionFailureException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.SecretsManager.Model.DeleteResourcePolicyRequest">
            <summary>
            Container for the parameters to the DeleteResourcePolicy operation.
            Deletes the resource-based permission policy attached to the secret. To attach a policy
            to a secret, use <a>PutResourcePolicy</a>.
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:DeleteResourcePolicy</c>. For more
            information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DeleteResourcePolicyRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The ARN or name of the secret to delete the attached resource-based policy for.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.DeleteResourcePolicyResponse">
            <summary>
            This is the response object from the DeleteResourcePolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DeleteResourcePolicyResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret that the resource-based policy was deleted for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DeleteResourcePolicyResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the secret that the resource-based policy was deleted for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.DeleteSecretRequest">
            <summary>
            Container for the parameters to the DeleteSecret operation.
            Deletes a secret and all of its versions. You can specify a recovery window during
            which you can restore the secret. The minimum recovery window is 7 days. The default
            recovery window is 30 days. Secrets Manager attaches a <c>DeletionDate</c> stamp to
            the secret that specifies the end of the recovery window. At the end of the recovery
            window, Secrets Manager deletes the secret permanently.
            
             
            <para>
            You can't delete a primary secret that is replicated to other Regions. You must first
            delete the replicas using <a>RemoveRegionsFromReplication</a>, and then delete the
            primary secret. When you delete a replica, it is deleted immediately.
            </para>
             
            <para>
            You can't directly delete a version of a secret. Instead, you remove all staging labels
            from the version using <a>UpdateSecretVersionStage</a>. This marks the version as
            deprecated, and then Secrets Manager can automatically delete the version in the background.
            </para>
             
            <para>
            To determine whether an application still uses a secret, you can create an Amazon
            CloudWatch alarm to alert you to any attempts to access a secret during the recovery
            window. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/monitoring_cloudwatch_deleted-secrets.html">
            Monitor secrets scheduled for deletion</a>.
            </para>
             
            <para>
            Secrets Manager performs the permanent secret deletion at the end of the waiting period
            as a background task with low priority. There is no guarantee of a specific time after
            the recovery window for the permanent delete to occur.
            </para>
             
            <para>
            At any time before recovery window ends, you can use <a>RestoreSecret</a> to remove
            the <c>DeletionDate</c> and cancel the deletion of the secret.
            </para>
             
            <para>
            When a secret is scheduled for deletion, you cannot retrieve the secret value. You
            must first cancel the deletion with <a>RestoreSecret</a> and then you can retrieve
            the secret.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:DeleteSecret</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DeleteSecretRequest.ForceDeleteWithoutRecovery">
            <summary>
            Gets and sets the property ForceDeleteWithoutRecovery. 
            <para>
            Specifies whether to delete the secret without any recovery window. You can't use
            both this parameter and <c>RecoveryWindowInDays</c> in the same call. If you don't
            use either, then by default Secrets Manager uses a 30 day recovery window.
            </para>
             
            <para>
            Secrets Manager performs the actual deletion with an asynchronous background process,
            so there might be a short delay before the secret is permanently deleted. If you delete
            a secret and then immediately create a secret with the same name, use appropriate
            back off and retry logic.
            </para>
             
            <para>
            If you forcibly delete an already deleted or nonexistent secret, the operation does
            not return <c>ResourceNotFoundException</c>.
            </para>
             <important> 
            <para>
            Use this parameter with caution. This parameter causes the operation to skip the normal
            recovery window before the permanent deletion that Secrets Manager would normally
            impose with the <c>RecoveryWindowInDays</c> parameter. If you delete a secret with
            the <c>ForceDeleteWithoutRecovery</c> parameter, then you have no opportunity to recover
            the secret. You lose the secret permanently.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DeleteSecretRequest.RecoveryWindowInDays">
            <summary>
            Gets and sets the property RecoveryWindowInDays. 
            <para>
            The number of days from 7 to 30 that Secrets Manager waits before permanently deleting
            the secret. You can't use both this parameter and <c>ForceDeleteWithoutRecovery</c>
            in the same call. If you don't use either, then by default Secrets Manager uses a
            30 day recovery window.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DeleteSecretRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The ARN or name of the secret to delete.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.DeleteSecretResponse">
            <summary>
            This is the response object from the DeleteSecret operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DeleteSecretResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DeleteSecretResponse.DeletionDate">
            <summary>
            Gets and sets the property DeletionDate. 
            <para>
            The date and time after which this secret Secrets Manager can permanently delete this
            secret, and it can no longer be restored. This value is the date and time of the delete
            request plus the number of days in <c>RecoveryWindowInDays</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DeleteSecretResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the secret.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.DescribeSecretRequest">
            <summary>
            Container for the parameters to the DescribeSecret operation.
            Retrieves the details of a secret. It does not include the encrypted secret value.
            Secrets Manager only returns fields that have a value in the response. 
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:DescribeSecret</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The ARN or name of the secret. 
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.DescribeSecretResponse">
            <summary>
            This is the response object from the DescribeSecret operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date the secret was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.DeletedDate">
            <summary>
            Gets and sets the property DeletedDate. 
            <para>
            The date the secret is scheduled for deletion. If it is not scheduled for deletion,
            this field is omitted. When you delete a secret, Secrets Manager requires a recovery
            window of at least 7 days before deleting the secret. Some time after the deleted
            date, Secrets Manager deletes the secret, including all of its versions.
            </para>
             
            <para>
            If a secret is scheduled for deletion, then its details, including the encrypted secret
            value, is not accessible. To cancel a scheduled deletion and restore access to the
            secret, use <a>RestoreSecret</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The key ID or alias ARN of the KMS key that Secrets Manager uses to encrypt the secret
            value. If the secret is encrypted with the Amazon Web Services managed key <c>aws/secretsmanager</c>,
            this field is omitted. Secrets created using the console use an KMS key ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.LastAccessedDate">
            <summary>
            Gets and sets the property LastAccessedDate. 
            <para>
            The date that the secret was last accessed in the Region. This field is omitted if
            the secret has never been retrieved in the Region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.LastChangedDate">
            <summary>
            Gets and sets the property LastChangedDate. 
            <para>
            The last date and time that this secret was modified in any way.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.LastRotatedDate">
            <summary>
            Gets and sets the property LastRotatedDate. 
            <para>
            The last date and time that Secrets Manager rotated the secret. If the secret isn't
            configured for rotation or rotation has been disabled, Secrets Manager returns null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.NextRotationDate">
            <summary>
            Gets and sets the property NextRotationDate. 
            <para>
            The next rotation is scheduled to occur on or before this date. If the secret isn't
            configured for rotation or rotation has been disabled, Secrets Manager returns null.
            If rotation fails, Secrets Manager retries the entire rotation process multiple times.
            If rotation is unsuccessful, this date may be in the past.
            </para>
             
            <para>
            This date represents the latest date that rotation will occur, but it is not an approximate
            rotation date. In some cases, for example if you turn off automatic rotation and then
            turn it back on, the next rotation may occur much sooner than this date.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.OwningService">
            <summary>
            Gets and sets the property OwningService. 
            <para>
            The ID of the service that created this secret. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.PrimaryRegion">
            <summary>
            Gets and sets the property PrimaryRegion. 
            <para>
            The Region the secret is in. If a secret is replicated to other Regions, the replicas
            are listed in <c>ReplicationStatus</c>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.ReplicationStatus">
            <summary>
            Gets and sets the property ReplicationStatus. 
            <para>
            A list of the replicas of this secret and their status: 
            </para>
             <ul> <li> 
            <para>
             <c>Failed</c>, which indicates that the replica was not created.
            </para>
             </li> <li> 
            <para>
             <c>InProgress</c>, which indicates that Secrets Manager is in the process of creating
            the replica.
            </para>
             </li> <li> 
            <para>
             <c>InSync</c>, which indicates that the replica was created.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.RotationEnabled">
            <summary>
            Gets and sets the property RotationEnabled. 
            <para>
            Specifies whether automatic rotation is turned on for this secret. If the secret has
            never been configured for rotation, Secrets Manager returns null.
            </para>
             
            <para>
            To turn on rotation, use <a>RotateSecret</a>. To turn off rotation, use <a>CancelRotateSecret</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.RotationLambdaARN">
            <summary>
            Gets and sets the property RotationLambdaARN. 
            <para>
            The ARN of the Lambda function that Secrets Manager invokes to rotate the secret.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.RotationRules">
            <summary>
            Gets and sets the property RotationRules. 
            <para>
            The rotation schedule and Lambda function for this secret. If the secret previously
            had rotation turned on, but it is now turned off, this field shows the previous rotation
            schedule and rotation function. If the secret never had rotation turned on, this field
            is omitted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of tags attached to the secret. To add tags to a secret, use <a>TagResource</a>.
            To remove tags, use <a>UntagResource</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.DescribeSecretResponse.VersionIdsToStages">
            <summary>
            Gets and sets the property VersionIdsToStages. 
            <para>
            A list of the versions of the secret that have staging labels attached. Versions that
            don't have staging labels are considered deprecated and Secrets Manager can delete
            them.
            </para>
             
            <para>
            Secrets Manager uses staging labels to indicate the status of a secret version during
            rotation. The three staging labels for rotation are: 
            </para>
             <ul> <li> 
            <para>
             <c>AWSCURRENT</c>, which indicates the current version of the secret.
            </para>
             </li> <li> 
            <para>
             <c>AWSPENDING</c>, which indicates the version of the secret that contains new secret
            information that will become the next current version when rotation finishes.
            </para>
             
            <para>
            During rotation, Secrets Manager creates an <c>AWSPENDING</c> version ID before creating
            the new secret version. To check if a secret version exists, call <a>GetSecretValue</a>.
            </para>
             </li> <li> 
            <para>
             <c>AWSPREVIOUS</c>, which indicates the previous current version of the secret. You
            can use this as the <i>last known good</i> version.
            </para>
             </li> </ul> 
            <para>
            For more information about rotation and staging labels, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_how.html">How
            rotation works</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.EncryptionFailureException">
            <summary>
            Secrets Manager can't encrypt the protected secret text using the provided KMS key.
            Check that the KMS key is available, enabled, and not in an invalid state. For more
            information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            state: Effect on your KMS key</a>.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.EncryptionFailureException.#ctor(System.String)">
            <summary>
            Constructs a new EncryptionFailureException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.EncryptionFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of EncryptionFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.EncryptionFailureException.#ctor(System.Exception)">
            <summary>
            Construct instance of EncryptionFailureException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.EncryptionFailureException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EncryptionFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.EncryptionFailureException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EncryptionFailureException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.SecretsManager.Model.Filter">
            <summary>
            Allows you to add filters when you use the search function in Secrets Manager. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/manage_search-secret.html">Find
            secrets in Secrets Manager</a>.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Filter.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The following are keys you can use:
            </para>
             <ul> <li> 
            <para>
             <b>description</b>: Prefix match, not case-sensitive.
            </para>
             </li> <li> 
            <para>
             <b>name</b>: Prefix match, case-sensitive.
            </para>
             </li> <li> 
            <para>
             <b>tag-key</b>: Prefix match, case-sensitive.
            </para>
             </li> <li> 
            <para>
             <b>tag-value</b>: Prefix match, case-sensitive.
            </para>
             </li> <li> 
            <para>
             <b>primary-region</b>: Prefix match, case-sensitive.
            </para>
             </li> <li> 
            <para>
             <b>owning-service</b>: Prefix match, case-sensitive.
            </para>
             </li> <li> 
            <para>
             <b>all</b>: Breaks the filter value string into words and then searches all attributes
            for matches. Not case-sensitive.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Filter.Values">
            <summary>
            Gets and sets the property Values. 
            <para>
            The keyword to filter for.
            </para>
             
            <para>
            You can prefix your search value with an exclamation mark (<c>!</c>) in order to perform
            negation filters. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.GetRandomPasswordRequest">
            <summary>
            Container for the parameters to the GetRandomPassword operation.
            Generates a random password. We recommend that you specify the maximum length and
            include every character type that the system you are generating a password for can
            support. By default, Secrets Manager uses uppercase and lowercase letters, numbers,
            and the following characters in passwords: <c>!\"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~</c>
            
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:GetRandomPassword</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetRandomPasswordRequest.ExcludeCharacters">
            <summary>
            Gets and sets the property ExcludeCharacters. 
            <para>
            A string of the characters that you don't want in the password.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetRandomPasswordRequest.ExcludeLowercase">
            <summary>
            Gets and sets the property ExcludeLowercase. 
            <para>
            Specifies whether to exclude lowercase letters from the password. If you don't include
            this switch, the password can contain lowercase letters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetRandomPasswordRequest.ExcludeNumbers">
            <summary>
            Gets and sets the property ExcludeNumbers. 
            <para>
            Specifies whether to exclude numbers from the password. If you don't include this
            switch, the password can contain numbers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetRandomPasswordRequest.ExcludePunctuation">
            <summary>
            Gets and sets the property ExcludePunctuation. 
            <para>
            Specifies whether to exclude the following punctuation characters from the password:
            <c>! " # $ % &amp; ' ( ) * + , - . / : ; &lt; = &gt; ? @ [ \ ] ^ _ ` { | } ~</c>.
            If you don't include this switch, the password can contain punctuation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetRandomPasswordRequest.ExcludeUppercase">
            <summary>
            Gets and sets the property ExcludeUppercase. 
            <para>
            Specifies whether to exclude uppercase letters from the password. If you don't include
            this switch, the password can contain uppercase letters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetRandomPasswordRequest.IncludeSpace">
            <summary>
            Gets and sets the property IncludeSpace. 
            <para>
            Specifies whether to include the space character. If you include this switch, the
            password can contain space characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetRandomPasswordRequest.PasswordLength">
            <summary>
            Gets and sets the property PasswordLength. 
            <para>
            The length of the password. If you don't include this parameter, the default length
            is 32 characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetRandomPasswordRequest.RequireEachIncludedType">
            <summary>
            Gets and sets the property RequireEachIncludedType. 
            <para>
            Specifies whether to include at least one upper and lowercase letter, one number,
            and one punctuation. If you don't include this switch, the password contains at least
            one of every character type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.GetRandomPasswordResponse">
            <summary>
            This is the response object from the GetRandomPassword operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetRandomPasswordResponse.RandomPassword">
            <summary>
            Gets and sets the property RandomPassword. 
            <para>
            A string with the password.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.GetResourcePolicyRequest">
            <summary>
            Container for the parameters to the GetResourcePolicy operation.
            Retrieves the JSON text of the resource-based policy document attached to the secret.
            For more information about permissions policies attached to a secret, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_resource-policies.html">Permissions
            policies attached to a secret</a>.
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:GetResourcePolicy</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetResourcePolicyRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The ARN or name of the secret to retrieve the attached resource-based policy for.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.GetResourcePolicyResponse">
            <summary>
            This is the response object from the GetResourcePolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetResourcePolicyResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret that the resource-based policy was retrieved for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetResourcePolicyResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the secret that the resource-based policy was retrieved for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetResourcePolicyResponse.ResourcePolicy">
            <summary>
            Gets and sets the property ResourcePolicy. 
            <para>
            A JSON-formatted string that contains the permissions policy attached to the secret.
            For more information about permissions policies, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control for Secrets Manager</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.GetSecretValueRequest">
            <summary>
            Container for the parameters to the GetSecretValue operation.
            Retrieves the contents of the encrypted fields <c>SecretString</c> or <c>SecretBinary</c>
            from the specified version of a secret, whichever contains content.
            
             
            <para>
            To retrieve the values for a group of secrets, call <a>BatchGetSecretValue</a>.
            </para>
             
            <para>
            We recommend that you cache your secret values by using client-side caching. Caching
            secrets improves speed and reduces your costs. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieving-secrets.html">Cache
            secrets for your applications</a>.
            </para>
             
            <para>
            To retrieve the previous version of a secret, use <c>VersionStage</c> and specify
            AWSPREVIOUS. To revert to the previous version of a secret, call <a href="https://docs.aws.amazon.com/cli/latest/reference/secretsmanager/update-secret-version-stage.html">UpdateSecretVersionStage</a>.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:GetSecretValue</c>. If the secret
            is encrypted using a customer-managed key instead of the Amazon Web Services managed
            key <c>aws/secretsmanager</c>, then you also need <c>kms:Decrypt</c> permissions for
            that key. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetSecretValueRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The ARN or name of the secret to retrieve. To retrieve a secret from another account,
            you must use an ARN.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetSecretValueRequest.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            The unique identifier of the version of the secret to retrieve. If you include both
            this parameter and <c>VersionStage</c>, the two parameters must refer to the same
            secret version. If you don't specify either a <c>VersionStage</c> or <c>VersionId</c>,
            then Secrets Manager returns the <c>AWSCURRENT</c> version.
            </para>
             
            <para>
            This value is typically a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID-type</a>
            value with 32 hexadecimal digits.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetSecretValueRequest.VersionStage">
            <summary>
            Gets and sets the property VersionStage. 
            <para>
            The staging label of the version of the secret to retrieve. 
            </para>
             
            <para>
            Secrets Manager uses staging labels to keep track of different versions during the
            rotation process. If you include both this parameter and <c>VersionId</c>, the two
            parameters must refer to the same secret version. If you don't specify either a <c>VersionStage</c>
            or <c>VersionId</c>, Secrets Manager returns the <c>AWSCURRENT</c> version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.GetSecretValueResponse">
            <summary>
            This is the response object from the GetSecretValue operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetSecretValueResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetSecretValueResponse.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time that this version of the secret was created. If you don't specify
            which version in <c>VersionId</c> or <c>VersionStage</c>, then Secrets Manager uses
            the <c>AWSCURRENT</c> version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetSecretValueResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The friendly name of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetSecretValueResponse.SecretBinary">
            <summary>
            Gets and sets the property SecretBinary. 
            <para>
            The decrypted secret value, if the secret value was originally provided as binary
            data in the form of a byte array. When you retrieve a <c>SecretBinary</c> using the
            HTTP API, the Python SDK, or the Amazon Web Services CLI, the value is Base64-encoded.
            Otherwise, it is not encoded.
            </para>
             
            <para>
            If the secret was created by using the Secrets Manager console, or if the secret value
            was originally provided as a string, then this field is omitted. The secret value
            appears in <c>SecretString</c> instead.
            </para>
             
            <para>
            Sensitive: This field contains sensitive information, so the service does not include
            it in CloudTrail log entries. If you create your own log entries, you must also avoid
            logging the information in this field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetSecretValueResponse.SecretString">
            <summary>
            Gets and sets the property SecretString. 
            <para>
            The decrypted secret value, if the secret value was originally provided as a string
            or through the Secrets Manager console.
            </para>
             
            <para>
            If this secret was created by using the console, then Secrets Manager stores the information
            as a JSON structure of key/value pairs. 
            </para>
             
            <para>
            Sensitive: This field contains sensitive information, so the service does not include
            it in CloudTrail log entries. If you create your own log entries, you must also avoid
            logging the information in this field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetSecretValueResponse.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            The unique identifier of this version of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.GetSecretValueResponse.VersionStages">
            <summary>
            Gets and sets the property VersionStages. 
            <para>
            A list of all of the staging labels currently attached to this version of the secret.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            <summary>
            An error occurred on the server side.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InternalServiceErrorException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServiceErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InternalServiceErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServiceErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InternalServiceErrorException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServiceErrorException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InternalServiceErrorException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServiceErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InternalServiceErrorException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServiceErrorException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.APIErrorTypeUnmarshaller">
            <summary>
            Response Unmarshaller for APIErrorType Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.APIErrorTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecretsManager#Model#APIErrorType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.APIErrorTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.APIErrorTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.BatchGetSecretValueRequestMarshaller">
            <summary>
            BatchGetSecretValue Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.BatchGetSecretValueRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.BatchGetSecretValueRequestMarshaller.Marshall(Amazon.SecretsManager.Model.BatchGetSecretValueRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.BatchGetSecretValueRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.BatchGetSecretValueResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchGetSecretValue operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.BatchGetSecretValueResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.BatchGetSecretValueResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.BatchGetSecretValueResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CancelRotateSecretRequestMarshaller">
            <summary>
            CancelRotateSecret Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CancelRotateSecretRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CancelRotateSecretRequestMarshaller.Marshall(Amazon.SecretsManager.Model.CancelRotateSecretRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CancelRotateSecretRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CancelRotateSecretResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelRotateSecret operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CancelRotateSecretResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CancelRotateSecretResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CancelRotateSecretResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CreateSecretRequestMarshaller">
            <summary>
            CreateSecret Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CreateSecretRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CreateSecretRequestMarshaller.Marshall(Amazon.SecretsManager.Model.CreateSecretRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CreateSecretRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CreateSecretResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSecret operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CreateSecretResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CreateSecretResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.CreateSecretResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DecryptionFailureExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DecryptionFailureException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DecryptionFailureExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DecryptionFailureExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DecryptionFailureExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller">
            <summary>
            DeleteResourcePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller.Marshall(Amazon.SecretsManager.Model.DeleteResourcePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteResourcePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteSecretRequestMarshaller">
            <summary>
            DeleteSecret Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteSecretRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteSecretRequestMarshaller.Marshall(Amazon.SecretsManager.Model.DeleteSecretRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteSecretRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteSecretResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSecret operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteSecretResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteSecretResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DeleteSecretResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DescribeSecretRequestMarshaller">
            <summary>
            DescribeSecret Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DescribeSecretRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DescribeSecretRequestMarshaller.Marshall(Amazon.SecretsManager.Model.DescribeSecretRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DescribeSecretRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DescribeSecretResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSecret operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DescribeSecretResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DescribeSecretResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.DescribeSecretResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.EncryptionFailureExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for EncryptionFailureException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.EncryptionFailureExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.EncryptionFailureExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.EncryptionFailureExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.FilterMarshaller">
            <summary>
            Filter Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.FilterMarshaller.Marshall(Amazon.SecretsManager.Model.Filter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecretsManager.Model.Internal.MarshallTransformations.FilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetRandomPasswordRequestMarshaller">
            <summary>
            GetRandomPassword Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetRandomPasswordRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetRandomPasswordRequestMarshaller.Marshall(Amazon.SecretsManager.Model.GetRandomPasswordRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetRandomPasswordRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetRandomPasswordResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetRandomPassword operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetRandomPasswordResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetRandomPasswordResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetRandomPasswordResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetResourcePolicyRequestMarshaller">
            <summary>
            GetResourcePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetResourcePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetResourcePolicyRequestMarshaller.Marshall(Amazon.SecretsManager.Model.GetResourcePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetResourcePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetResourcePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetResourcePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetResourcePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetResourcePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetResourcePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetSecretValueRequestMarshaller">
            <summary>
            GetSecretValue Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetSecretValueRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetSecretValueRequestMarshaller.Marshall(Amazon.SecretsManager.Model.GetSecretValueRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetSecretValueRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetSecretValueResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSecretValue operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetSecretValueResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetSecretValueResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.GetSecretValueResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InternalServiceErrorExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServiceErrorException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InternalServiceErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InternalServiceErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InternalServiceErrorExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidNextTokenExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidNextTokenException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidNextTokenExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidNextTokenExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidNextTokenExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidParameterException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidRequestException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.InvalidRequestExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretsRequestMarshaller">
            <summary>
            ListSecrets Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretsRequestMarshaller.Marshall(Amazon.SecretsManager.Model.ListSecretsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSecrets operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretVersionIdsRequestMarshaller">
            <summary>
            ListSecretVersionIds Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretVersionIdsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretVersionIdsRequestMarshaller.Marshall(Amazon.SecretsManager.Model.ListSecretVersionIdsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretVersionIdsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretVersionIdsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSecretVersionIds operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretVersionIdsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretVersionIdsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ListSecretVersionIdsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.MalformedPolicyDocumentExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for MalformedPolicyDocumentException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.MalformedPolicyDocumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.MalformedPolicyDocumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.MalformedPolicyDocumentExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PreconditionNotMetExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PreconditionNotMetException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PreconditionNotMetExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PreconditionNotMetExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PreconditionNotMetExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PublicPolicyExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PublicPolicyException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PublicPolicyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PublicPolicyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PublicPolicyExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller">
            <summary>
            PutResourcePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller.Marshall(Amazon.SecretsManager.Model.PutResourcePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutResourcePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutSecretValueRequestMarshaller">
            <summary>
            PutSecretValue Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutSecretValueRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutSecretValueRequestMarshaller.Marshall(Amazon.SecretsManager.Model.PutSecretValueRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutSecretValueRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutSecretValueResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutSecretValue operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutSecretValueResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutSecretValueResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.PutSecretValueResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RemoveRegionsFromReplicationRequestMarshaller">
            <summary>
            RemoveRegionsFromReplication Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RemoveRegionsFromReplicationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RemoveRegionsFromReplicationRequestMarshaller.Marshall(Amazon.SecretsManager.Model.RemoveRegionsFromReplicationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RemoveRegionsFromReplicationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RemoveRegionsFromReplicationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemoveRegionsFromReplication operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RemoveRegionsFromReplicationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RemoveRegionsFromReplicationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RemoveRegionsFromReplicationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicaRegionTypeMarshaller">
            <summary>
            ReplicaRegionType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicaRegionTypeMarshaller.Marshall(Amazon.SecretsManager.Model.ReplicaRegionType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicaRegionTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicateSecretToRegionsRequestMarshaller">
            <summary>
            ReplicateSecretToRegions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicateSecretToRegionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicateSecretToRegionsRequestMarshaller.Marshall(Amazon.SecretsManager.Model.ReplicateSecretToRegionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicateSecretToRegionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicateSecretToRegionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ReplicateSecretToRegions operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicateSecretToRegionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicateSecretToRegionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicateSecretToRegionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicationStatusTypeUnmarshaller">
            <summary>
            Response Unmarshaller for ReplicationStatusType Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicationStatusTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecretsManager#Model#ReplicationStatusType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicationStatusTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ReplicationStatusTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ResourceExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ResourceExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ResourceExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ResourceExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RestoreSecretRequestMarshaller">
            <summary>
            RestoreSecret Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RestoreSecretRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RestoreSecretRequestMarshaller.Marshall(Amazon.SecretsManager.Model.RestoreSecretRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RestoreSecretRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RestoreSecretResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RestoreSecret operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RestoreSecretResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RestoreSecretResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RestoreSecretResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotateSecretRequestMarshaller">
            <summary>
            RotateSecret Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotateSecretRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotateSecretRequestMarshaller.Marshall(Amazon.SecretsManager.Model.RotateSecretRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotateSecretRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotateSecretResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RotateSecret operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotateSecretResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotateSecretResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotateSecretResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotationRulesTypeMarshaller">
            <summary>
            RotationRulesType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotationRulesTypeMarshaller.Marshall(Amazon.SecretsManager.Model.RotationRulesType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotationRulesTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotationRulesTypeUnmarshaller">
            <summary>
            Response Unmarshaller for RotationRulesType Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotationRulesTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecretsManager#Model#RotationRulesType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotationRulesTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.RotationRulesTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretListEntryUnmarshaller">
            <summary>
            Response Unmarshaller for SecretListEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretListEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecretsManager#Model#SecretListEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretListEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretListEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretValueEntryUnmarshaller">
            <summary>
            Response Unmarshaller for SecretValueEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretValueEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecretsManager#Model#SecretValueEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretValueEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretValueEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretVersionsListEntryUnmarshaller">
            <summary>
            Response Unmarshaller for SecretVersionsListEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretVersionsListEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecretsManager#Model#SecretVersionsListEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretVersionsListEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.SecretVersionsListEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.StopReplicationToReplicaRequestMarshaller">
            <summary>
            StopReplicationToReplica Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.StopReplicationToReplicaRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.StopReplicationToReplicaRequestMarshaller.Marshall(Amazon.SecretsManager.Model.StopReplicationToReplicaRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.StopReplicationToReplicaRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.StopReplicationToReplicaResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopReplicationToReplica operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.StopReplicationToReplicaResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.StopReplicationToReplicaResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.StopReplicationToReplicaResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.SecretsManager.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.SecretsManager.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecretsManager#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.SecretsManager.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretRequestMarshaller">
            <summary>
            UpdateSecret Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretRequestMarshaller.Marshall(Amazon.SecretsManager.Model.UpdateSecretRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateSecret operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretVersionStageRequestMarshaller">
            <summary>
            UpdateSecretVersionStage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretVersionStageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretVersionStageRequestMarshaller.Marshall(Amazon.SecretsManager.Model.UpdateSecretVersionStageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretVersionStageRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretVersionStageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateSecretVersionStage operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretVersionStageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretVersionStageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.UpdateSecretVersionStageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidateResourcePolicyRequestMarshaller">
            <summary>
            ValidateResourcePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidateResourcePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidateResourcePolicyRequestMarshaller.Marshall(Amazon.SecretsManager.Model.ValidateResourcePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidateResourcePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidateResourcePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ValidateResourcePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidateResourcePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidateResourcePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidateResourcePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidationErrorsEntryUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationErrorsEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidationErrorsEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SecretsManager#Model#ValidationErrorsEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidationErrorsEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns>The unmarshalled object</returns>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Internal.MarshallTransformations.ValidationErrorsEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SecretsManager.Model.InvalidNextTokenException">
            <summary>
            The <c>NextToken</c> value is invalid.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidNextTokenException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidNextTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidNextTokenException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidNextTokenException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidNextTokenException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidNextTokenException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.SecretsManager.Model.InvalidParameterException">
            <summary>
            The parameter name or value is invalid.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.SecretsManager.Model.InvalidRequestException">
            <summary>
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidRequestException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.InvalidRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.SecretsManager.Model.LimitExceededException">
            <summary>
            The request failed because it would exceed one of the Secrets Manager quotas.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ListSecretsRequest">
            <summary>
            Container for the parameters to the ListSecrets operation.
            Lists the secrets that are stored by Secrets Manager in the Amazon Web Services account,
            not including secrets that are marked for deletion. To see secrets marked for deletion,
            use the Secrets Manager console.
            
             
            <para>
            All Secrets Manager operations are eventually consistent. ListSecrets might not reflect
            changes from the last five minutes. You can get more recent information for a specific
            secret by calling <a>DescribeSecret</a>.
            </para>
             
            <para>
            To list the versions of a secret, use <a>ListSecretVersionIds</a>.
            </para>
             
            <para>
            To retrieve the values for the secrets, call <a>BatchGetSecretValue</a> or <a>GetSecretValue</a>.
            </para>
             
            <para>
            For information about finding secrets in the console, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/manage_search-secret.html">Find
            secrets in Secrets Manager</a>.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:ListSecrets</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            The filters to apply to the list of secrets.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretsRequest.IncludePlannedDeletion">
            <summary>
            Gets and sets the property IncludePlannedDeletion. 
            <para>
            Specifies whether to include secrets scheduled for deletion. By default, secrets scheduled
            for deletion aren't included.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The number of results to include in the response.
            </para>
             
            <para>
            If there are more results available, in the response, Secrets Manager includes <c>NextToken</c>.
            To get the next results, call <c>ListSecrets</c> again with the value from <c>NextToken</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A token that indicates where the output should continue from, if a previous call did
            not show all results. To get the next results, call <c>ListSecrets</c> again with
            this value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretsRequest.SortOrder">
            <summary>
            Gets and sets the property SortOrder. 
            <para>
            Secrets are listed by <c>CreatedDate</c>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ListSecretsResponse">
            <summary>
            This is the response object from the ListSecrets operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Secrets Manager includes this value if there's more output available than what is
            included in the current response. This can occur even when the response includes no
            values at all, such as when you ask for a filtered view of a long list. To get the
            next results, call <c>ListSecrets</c> again with this value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretsResponse.SecretList">
            <summary>
            Gets and sets the property SecretList. 
            <para>
            A list of the secrets in the account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ListSecretVersionIdsRequest">
            <summary>
            Container for the parameters to the ListSecretVersionIds operation.
            Lists the versions of a secret. Secrets Manager uses staging labels to indicate the
            different versions of a secret. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/getting-started.html#term_version">
            Secrets Manager concepts: Versions</a>.
            
             
            <para>
            To list the secrets in the account, use <a>ListSecrets</a>.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:ListSecretVersionIds</c>. For more
            information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretVersionIdsRequest.IncludeDeprecated">
            <summary>
            Gets and sets the property IncludeDeprecated. 
            <para>
            Specifies whether to include versions of secrets that don't have any staging labels
            attached to them. Versions without staging labels are considered deprecated and are
            subject to deletion by Secrets Manager. By default, versions without staging labels
            aren't included.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretVersionIdsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The number of results to include in the response.
            </para>
             
            <para>
            If there are more results available, in the response, Secrets Manager includes <c>NextToken</c>.
            To get the next results, call <c>ListSecretVersionIds</c> again with the value from
            <c>NextToken</c>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretVersionIdsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A token that indicates where the output should continue from, if a previous call did
            not show all results. To get the next results, call <c>ListSecretVersionIds</c> again
            with this value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretVersionIdsRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The ARN or name of the secret whose versions you want to list.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ListSecretVersionIdsResponse">
            <summary>
            This is the response object from the ListSecretVersionIds operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretVersionIdsResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretVersionIdsResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretVersionIdsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Secrets Manager includes this value if there's more output available than what is
            included in the current response. This can occur even when the response includes no
            values at all, such as when you ask for a filtered view of a long list. To get the
            next results, call <c>ListSecretVersionIds</c> again with this value. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretVersionIdsResponse.Versions">
            <summary>
            Gets and sets the property Versions. 
            <para>
            A list of the versions of the secret.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            <summary>
            The resource policy has syntax errors.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.MalformedPolicyDocumentException.#ctor(System.String)">
            <summary>
            Constructs a new MalformedPolicyDocumentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.MalformedPolicyDocumentException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MalformedPolicyDocumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.MalformedPolicyDocumentException.#ctor(System.Exception)">
            <summary>
            Construct instance of MalformedPolicyDocumentException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.MalformedPolicyDocumentException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MalformedPolicyDocumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.MalformedPolicyDocumentException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MalformedPolicyDocumentException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.SecretsManager.Model.PreconditionNotMetException">
            <summary>
            The request failed because you did not complete all the prerequisite steps.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PreconditionNotMetException.#ctor(System.String)">
            <summary>
            Constructs a new PreconditionNotMetException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PreconditionNotMetException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PreconditionNotMetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PreconditionNotMetException.#ctor(System.Exception)">
            <summary>
            Construct instance of PreconditionNotMetException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PreconditionNotMetException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PreconditionNotMetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PreconditionNotMetException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PreconditionNotMetException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.SecretsManager.Model.PublicPolicyException">
            <summary>
            The <c>BlockPublicPolicy</c> parameter is set to true, and the resource policy did
            not prevent broad access to the secret.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PublicPolicyException.#ctor(System.String)">
            <summary>
            Constructs a new PublicPolicyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PublicPolicyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PublicPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PublicPolicyException.#ctor(System.Exception)">
            <summary>
            Construct instance of PublicPolicyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PublicPolicyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PublicPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.PublicPolicyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PublicPolicyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.SecretsManager.Model.PutResourcePolicyRequest">
            <summary>
            Container for the parameters to the PutResourcePolicy operation.
            Attaches a resource-based permission policy to a secret. A resource-based policy is
            optional. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control for Secrets Manager</a> 
            
             
            <para>
            For information about attaching a policy in the console, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_resource-based-policies.html">Attach
            a permissions policy to a secret</a>.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:PutResourcePolicy</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutResourcePolicyRequest.BlockPublicPolicy">
            <summary>
            Gets and sets the property BlockPublicPolicy. 
            <para>
            Specifies whether to block resource-based policies that allow broad access to the
            secret, for example those that use a wildcard for the principal. By default, public
            policies aren't blocked.
            </para>
             <important> 
            <para>
            Resource policy validation and the BlockPublicPolicy parameter help protect your resources
            by preventing public access from being granted through the resource policies that
            are directly attached to your secrets. In addition to using these features, carefully
            inspect the following policies to confirm that they do not grant public access:
            </para>
             <ul> <li> 
            <para>
            Identity-based policies attached to associated Amazon Web Services principals (for
            example, IAM roles)
            </para>
             </li> <li> 
            <para>
            Resource-based policies attached to associated Amazon Web Services resources (for
            example, Key Management Service (KMS) keys)
            </para>
             </li> </ul> 
            <para>
            To review permissions to your secrets, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/determine-acccess_examine-iam-policies.html">Determine
            who has permissions to your secrets</a>.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutResourcePolicyRequest.ResourcePolicy">
            <summary>
            Gets and sets the property ResourcePolicy. 
            <para>
            A JSON-formatted string for an Amazon Web Services resource-based policy. For example
            policies, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html">Permissions
            policy examples</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutResourcePolicyRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The ARN or name of the secret to attach the resource-based policy.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.PutResourcePolicyResponse">
            <summary>
            This is the response object from the PutResourcePolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutResourcePolicyResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutResourcePolicyResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the secret.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.PutSecretValueRequest">
            <summary>
            Container for the parameters to the PutSecretValue operation.
            Creates a new version with a new encrypted secret value and attaches it to the secret.
            The version can contain a new <c>SecretString</c> value or a new <c>SecretBinary</c>
            value. 
            
             
            <para>
            We recommend you avoid calling <c>PutSecretValue</c> at a sustained rate of more than
            once every 10 minutes. When you update the secret value, Secrets Manager creates a
            new version of the secret. Secrets Manager removes outdated versions when there are
            more than 100, but it does not remove versions created less than 24 hours ago. If
            you call <c>PutSecretValue</c> more than once every 10 minutes, you create more versions
            than Secrets Manager removes, and you will reach the quota for secret versions.
            </para>
             
            <para>
            You can specify the staging labels to attach to the new version in <c>VersionStages</c>.
            If you don't include <c>VersionStages</c>, then Secrets Manager automatically moves
            the staging label <c>AWSCURRENT</c> to this version. If this operation creates the
            first version for the secret, then Secrets Manager automatically attaches the staging
            label <c>AWSCURRENT</c> to it. If this operation moves the staging label <c>AWSCURRENT</c>
            from another version to this version, then Secrets Manager also automatically moves
            the staging label <c>AWSPREVIOUS</c> to the version that <c>AWSCURRENT</c> was removed
            from.
            </para>
             
            <para>
            This operation is idempotent. If you call this operation with a <c>ClientRequestToken</c>
            that matches an existing version's VersionId, and you specify the same secret data,
            the operation succeeds but does nothing. However, if the secret data is different,
            then the operation fails because you can't modify an existing version; you can only
            create new ones.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters except <c>SecretBinary</c>, <c>SecretString</c>,
            or <c>RotationToken</c> because it might be logged. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:PutSecretValue</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
             <important> 
            <para>
            When you enter commands in a command shell, there is a risk of the command history
            being accessed or utilities having access to your command parameters. This is a concern
            if the command includes the value of a secret. Learn how to <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/security_cli-exposure-risks.html">Mitigate
            the risks of using command-line tools to store Secrets Manager secrets</a>.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutSecretValueRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            A unique identifier for the new version of the secret. 
            </para>
             <note> 
            <para>
            If you use the Amazon Web Services CLI or one of the Amazon Web Services SDKs to call
            this operation, then you can leave this parameter empty. The CLI or SDK generates
            a random UUID for you and includes it as the value for this parameter in the request.
            
            </para>
             </note> 
            <para>
            If you generate a raw HTTP request to the Secrets Manager service endpoint, then you
            must generate a <c>ClientRequestToken</c> and include it in the request.
            </para>
             
            <para>
            This value helps ensure idempotency. Secrets Manager uses this value to prevent the
            accidental creation of duplicate versions if there are failures and retries during
            a rotation. We recommend that you generate a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID-type</a>
            value to ensure uniqueness of your versions within the specified secret. 
            </para>
             <ul> <li> 
            <para>
            If the <c>ClientRequestToken</c> value isn't already associated with a version of
            the secret then a new version of the secret is created. 
            </para>
             </li> <li> 
            <para>
            If a version with this value already exists and that version's <c>SecretString</c>
            or <c>SecretBinary</c> values are the same as those in the request then the request
            is ignored. The operation is idempotent. 
            </para>
             </li> <li> 
            <para>
            If a version with this value already exists and the version of the <c>SecretString</c>
            and <c>SecretBinary</c> values are different from those in the request, then the request
            fails because you can't modify a secret version. You can only create new versions
            to store new secret values.
            </para>
             </li> </ul> 
            <para>
            This value becomes the <c>VersionId</c> of the new version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutSecretValueRequest.RotationToken">
            <summary>
            Gets and sets the property RotationToken. 
            <para>
            A unique identifier that indicates the source of the request. For cross-account rotation
            (when you rotate a secret in one account by using a Lambda rotation function in another
            account) and the Lambda rotation function assumes an IAM role to call Secrets Manager,
            Secrets Manager validates the identity with the rotation token. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html">How
            rotation works</a>.
            </para>
             
            <para>
            Sensitive: This field contains sensitive information, so the service does not include
            it in CloudTrail log entries. If you create your own log entries, you must also avoid
            logging the information in this field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutSecretValueRequest.SecretBinary">
            <summary>
            Gets and sets the property SecretBinary. 
            <para>
            The binary data to encrypt and store in the new version of the secret. To use this
            parameter in the command-line tools, we recommend that you store your binary data
            in a file and then pass the contents of the file as a parameter. 
            </para>
             
            <para>
            You must include <c>SecretBinary</c> or <c>SecretString</c>, but not both.
            </para>
             
            <para>
            You can't access this value from the Secrets Manager console.
            </para>
             
            <para>
            Sensitive: This field contains sensitive information, so the service does not include
            it in CloudTrail log entries. If you create your own log entries, you must also avoid
            logging the information in this field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutSecretValueRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The ARN or name of the secret to add a new version to.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.
            </para>
             
            <para>
            If the secret doesn't already exist, use <c>CreateSecret</c> instead.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutSecretValueRequest.SecretString">
            <summary>
            Gets and sets the property SecretString. 
            <para>
            The text to encrypt and store in the new version of the secret. 
            </para>
             
            <para>
            You must include <c>SecretBinary</c> or <c>SecretString</c>, but not both.
            </para>
             
            <para>
            We recommend you create the secret string as JSON key/value pairs, as shown in the
            example.
            </para>
             
            <para>
            Sensitive: This field contains sensitive information, so the service does not include
            it in CloudTrail log entries. If you create your own log entries, you must also avoid
            logging the information in this field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutSecretValueRequest.VersionStages">
            <summary>
            Gets and sets the property VersionStages. 
            <para>
            A list of staging labels to attach to this version of the secret. Secrets Manager
            uses staging labels to track versions of a secret through the rotation process.
            </para>
             
            <para>
            If you specify a staging label that's already associated with a different version
            of the same secret, then Secrets Manager removes the label from the other version
            and attaches it to this version. If you specify <c>AWSCURRENT</c>, and it is already
            attached to another version, then Secrets Manager also moves the staging label <c>AWSPREVIOUS</c>
            to the version that <c>AWSCURRENT</c> was removed from.
            </para>
             
            <para>
            If you don't include <c>VersionStages</c>, then Secrets Manager automatically moves
            the staging label <c>AWSCURRENT</c> to this version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.PutSecretValueResponse">
            <summary>
            This is the response object from the PutSecretValue operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutSecretValueResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutSecretValueResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutSecretValueResponse.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            The unique identifier of the version of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.PutSecretValueResponse.VersionStages">
            <summary>
            Gets and sets the property VersionStages. 
            <para>
            The list of staging labels that are currently attached to this version of the secret.
            Secrets Manager uses staging labels to track a version as it progresses through the
            secret rotation process.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.RemoveRegionsFromReplicationRequest">
            <summary>
            Container for the parameters to the RemoveRegionsFromReplication operation.
            For a secret that is replicated to other Regions, deletes the secret replicas from
            the Regions you specify.
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:RemoveRegionsFromReplication</c>.
            For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RemoveRegionsFromReplicationRequest.RemoveReplicaRegions">
            <summary>
            Gets and sets the property RemoveReplicaRegions. 
            <para>
            The Regions of the replicas to remove.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RemoveRegionsFromReplicationRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The ARN or name of the secret.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.RemoveRegionsFromReplicationResponse">
            <summary>
            This is the response object from the RemoveRegionsFromReplication operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RemoveRegionsFromReplicationResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the primary secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RemoveRegionsFromReplicationResponse.ReplicationStatus">
            <summary>
            Gets and sets the property ReplicationStatus. 
            <para>
            The status of replicas for this secret after you remove Regions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ReplicaRegionType">
            <summary>
            A custom type that specifies a <c>Region</c> and the <c>KmsKeyId</c> for a replica
            secret.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicaRegionType.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The ARN, key ID, or alias of the KMS key to encrypt the secret. If you don't include
            this field, Secrets Manager uses <c>aws/secretsmanager</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicaRegionType.Region">
            <summary>
            Gets and sets the property Region. 
            <para>
            A Region code. For a list of Region codes, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints">Name
            and code of Regions</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ReplicateSecretToRegionsRequest">
            <summary>
            Container for the parameters to the ReplicateSecretToRegions operation.
            Replicates the secret to a new Regions. See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/create-manage-multi-region-secrets.html">Multi-Region
            secrets</a>.
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:ReplicateSecretToRegions</c>. If
            the primary secret is encrypted with a KMS key other than <c>aws/secretsmanager</c>,
            you also need <c>kms:Decrypt</c> permission to the key. To encrypt the replicated
            secret with a KMS key other than <c>aws/secretsmanager</c>, you need <c>kms:GenerateDataKey</c>
            and <c>kms:Encrypt</c> to the key. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicateSecretToRegionsRequest.AddReplicaRegions">
            <summary>
            Gets and sets the property AddReplicaRegions. 
            <para>
            A list of Regions in which to replicate the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicateSecretToRegionsRequest.ForceOverwriteReplicaSecret">
            <summary>
            Gets and sets the property ForceOverwriteReplicaSecret. 
            <para>
            Specifies whether to overwrite a secret with the same name in the destination Region.
            By default, secrets aren't overwritten.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicateSecretToRegionsRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The ARN or name of the secret to replicate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ReplicateSecretToRegionsResponse">
            <summary>
            This is the response object from the ReplicateSecretToRegions operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicateSecretToRegionsResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the primary secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicateSecretToRegionsResponse.ReplicationStatus">
            <summary>
            Gets and sets the property ReplicationStatus. 
            <para>
            The status of replication.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ReplicationStatusType">
            <summary>
            A replication object consisting of a <c>RegionReplicationStatus</c> object and includes
            a Region, KMSKeyId, status, and status message.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicationStatusType.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            Can be an <c>ARN</c>, <c>Key ID</c>, or <c>Alias</c>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicationStatusType.LastAccessedDate">
            <summary>
            Gets and sets the property LastAccessedDate. 
            <para>
            The date that the secret was last accessed in the Region. This field is omitted if
            the secret has never been retrieved in the Region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicationStatusType.Region">
            <summary>
            Gets and sets the property Region. 
            <para>
            The Region where replication occurs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicationStatusType.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status can be <c>InProgress</c>, <c>Failed</c>, or <c>InSync</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ReplicationStatusType.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            Status message such as "<i>Secret with this name already exists in this region</i>".
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ResourceExistsException">
            <summary>
            A resource with the ID you requested already exists.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceExistsException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            <summary>
            Secrets Manager can't find the resource that you asked for.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.SecretsManager.Model.RestoreSecretRequest">
            <summary>
            Container for the parameters to the RestoreSecret operation.
            Cancels the scheduled deletion of a secret by removing the <c>DeletedDate</c> time
            stamp. You can access a secret again after it has been restored.
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:RestoreSecret</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RestoreSecretRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The ARN or name of the secret to restore.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.RestoreSecretResponse">
            <summary>
            This is the response object from the RestoreSecret operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RestoreSecretResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret that was restored.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RestoreSecretResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the secret that was restored.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.RotateSecretRequest">
            <summary>
            Container for the parameters to the RotateSecret operation.
            Configures and starts the asynchronous process of rotating the secret. For information
            about rotation, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html">Rotate
            secrets</a> in the <i>Secrets Manager User Guide</i>. If you include the configuration
            parameters, the operation sets the values for the secret and then immediately starts
            a rotation. If you don't include the configuration parameters, the operation starts
            a rotation with the values already stored in the secret. 
            
             
            <para>
            When rotation is successful, the <c>AWSPENDING</c> staging label might be attached
            to the same version as the <c>AWSCURRENT</c> version, or it might not be attached
            to any version. If the <c>AWSPENDING</c> staging label is present but not attached
            to the same version as <c>AWSCURRENT</c>, then any later invocation of <c>RotateSecret</c>
            assumes that a previous rotation request is still in progress and returns an error.
            When rotation is unsuccessful, the <c>AWSPENDING</c> staging label might be attached
            to an empty secret version. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot_rotation.html">Troubleshoot
            rotation</a> in the <i>Secrets Manager User Guide</i>.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:RotateSecret</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. You also need <c>lambda:InvokeFunction</c>
            permissions on the rotation function. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets-required-permissions-function.html">
            Permissions for rotation</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RotateSecretRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            A unique identifier for the new version of the secret. You only need to specify this
            value if you implement your own retry logic and you want to ensure that Secrets Manager
            doesn't attempt to create a secret version twice.
            </para>
             <note> 
            <para>
            If you use the Amazon Web Services CLI or one of the Amazon Web Services SDKs to call
            this operation, then you can leave this parameter empty. The CLI or SDK generates
            a random UUID for you and includes it as the value for this parameter in the request.
            
            </para>
             </note> 
            <para>
            If you generate a raw HTTP request to the Secrets Manager service endpoint, then you
            must generate a <c>ClientRequestToken</c> and include it in the request.
            </para>
             
            <para>
            This value helps ensure idempotency. Secrets Manager uses this value to prevent the
            accidental creation of duplicate versions if there are failures and retries during
            a rotation. We recommend that you generate a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID-type</a>
            value to ensure uniqueness of your versions within the specified secret. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RotateSecretRequest.RotateImmediately">
            <summary>
            Gets and sets the property RotateImmediately. 
            <para>
            Specifies whether to rotate the secret immediately or wait until the next scheduled
            rotation window. The rotation schedule is defined in <a>RotateSecretRequest$RotationRules</a>.
            </para>
             
            <para>
            For secrets that use a Lambda rotation function to rotate, if you don't immediately
            rotate the secret, Secrets Manager tests the rotation configuration by running the
            <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_lambda-functions.html#rotate-secrets_lambda-functions-code">
            <c>testSecret</c> step</a> of the Lambda rotation function. The test creates an <c>AWSPENDING</c>
            version of the secret and then removes it.
            </para>
             
            <para>
            By default, Secrets Manager rotates the secret immediately.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RotateSecretRequest.RotationLambdaARN">
            <summary>
            Gets and sets the property RotationLambdaARN. 
            <para>
            For secrets that use a Lambda rotation function to rotate, the ARN of the Lambda rotation
            function. 
            </para>
             
            <para>
            For secrets that use <i>managed rotation</i>, omit this field. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_managed.html">Managed
            rotation</a> in the <i>Secrets Manager User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RotateSecretRequest.RotationRules">
            <summary>
            Gets and sets the property RotationRules. 
            <para>
            A structure that defines the rotation configuration for this secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RotateSecretRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The ARN or name of the secret to rotate.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.RotateSecretResponse">
            <summary>
            This is the response object from the RotateSecret operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RotateSecretResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RotateSecretResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RotateSecretResponse.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            The ID of the new version of the secret.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.RotationRulesType">
            <summary>
            A structure that defines the rotation configuration for the secret.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RotationRulesType.AutomaticallyAfterDays">
            <summary>
            Gets and sets the property AutomaticallyAfterDays. 
            <para>
            The number of days between rotations of the secret. You can use this value to check
            that your secret meets your compliance guidelines for how often secrets must be rotated.
            If you use this field to set the rotation schedule, Secrets Manager calculates the
            next rotation date based on the previous rotation. Manually updating the secret value
            by calling <c>PutSecretValue</c> or <c>UpdateSecret</c> is considered a valid rotation.
            </para>
             
            <para>
            In <c>DescribeSecret</c> and <c>ListSecrets</c>, this value is calculated from the
            rotation schedule after every successful rotation. In <c>RotateSecret</c>, you can
            set the rotation schedule in <c>RotationRules</c> with <c>AutomaticallyAfterDays</c>
            or <c>ScheduleExpression</c>, but not both. To set a rotation schedule in hours, use
            <c>ScheduleExpression</c>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RotationRulesType.Duration">
            <summary>
            Gets and sets the property Duration. 
            <para>
            The length of the rotation window in hours, for example <c>3h</c> for a three hour
            window. Secrets Manager rotates your secret at any time during this window. The window
            must not extend into the next rotation window or the next UTC day. The window starts
            according to the <c>ScheduleExpression</c>. If you don't specify a <c>Duration</c>,
            for a <c>ScheduleExpression</c> in hours, the window automatically closes after one
            hour. For a <c>ScheduleExpression</c> in days, the window automatically closes at
            the end of the UTC day. For more information, including examples, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_schedule.html">Schedule
            expressions in Secrets Manager rotation</a> in the <i>Secrets Manager Users Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.RotationRulesType.ScheduleExpression">
            <summary>
            Gets and sets the property ScheduleExpression. 
            <para>
            A <c>cron()</c> or <c>rate()</c> expression that defines the schedule for rotating
            your secret. Secrets Manager rotation schedules use UTC time zone. Secrets Manager
            rotates your secret any time during a rotation window.
            </para>
             
            <para>
            Secrets Manager <c>rate()</c> expressions represent the interval in hours or days
            that you want to rotate your secret, for example <c>rate(12 hours)</c> or <c>rate(10
            days)</c>. You can rotate a secret as often as every four hours. If you use a <c>rate()</c>
            expression, the rotation window starts at midnight. For a rate in hours, the default
            rotation window closes after one hour. For a rate in days, the default rotation window
            closes at the end of the day. You can set the <c>Duration</c> to change the rotation
            window. The rotation window must not extend into the next UTC day or into the next
            rotation window.
            </para>
             
            <para>
            You can use a <c>cron()</c> expression to create a rotation schedule that is more
            detailed than a rotation interval. For more information, including examples, see <a
            href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_schedule.html">Schedule
            expressions in Secrets Manager rotation</a> in the <i>Secrets Manager Users Guide</i>.
            For a cron expression that represents a schedule in hours, the default rotation window
            closes after one hour. For a cron expression that represents a schedule in days, the
            default rotation window closes at the end of the day. You can set the <c>Duration</c>
            to change the rotation window. The rotation window must not extend into the next UTC
            day or into the next rotation window.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.SecretListEntry">
            <summary>
            A structure that contains the details about a secret. It does not include the encrypted
            <c>SecretString</c> and <c>SecretBinary</c> values. To get those values, use <a href="https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_GetSecretValue.html">GetSecretValue</a>
            .
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The Amazon Resource Name (ARN) of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time when a secret was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.DeletedDate">
            <summary>
            Gets and sets the property DeletedDate. 
            <para>
            The date and time the deletion of the secret occurred. Not present on active secrets.
            The secret can be recovered until the number of days in the recovery window has passed,
            as specified in the <c>RecoveryWindowInDays</c> parameter of the <a href="https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html">
            <c>DeleteSecret</c> </a> operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The user-provided description of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The ARN of the KMS key that Secrets Manager uses to encrypt the secret value. If the
            secret is encrypted with the Amazon Web Services managed key <c>aws/secretsmanager</c>,
            this field is omitted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.LastAccessedDate">
            <summary>
            Gets and sets the property LastAccessedDate. 
            <para>
            The date that the secret was last accessed in the Region. This field is omitted if
            the secret has never been retrieved in the Region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.LastChangedDate">
            <summary>
            Gets and sets the property LastChangedDate. 
            <para>
            The last date and time that this secret was modified in any way.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.LastRotatedDate">
            <summary>
            Gets and sets the property LastRotatedDate. 
            <para>
            The most recent date and time that the Secrets Manager rotation process was successfully
            completed. This value is null if the secret hasn't ever rotated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The friendly name of the secret. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.NextRotationDate">
            <summary>
            Gets and sets the property NextRotationDate. 
            <para>
            The next rotation is scheduled to occur on or before this date. If the secret isn't
            configured for rotation or rotation has been disabled, Secrets Manager returns null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.OwningService">
            <summary>
            Gets and sets the property OwningService. 
            <para>
            Returns the name of the service that created the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.PrimaryRegion">
            <summary>
            Gets and sets the property PrimaryRegion. 
            <para>
            The Region where Secrets Manager originated the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.RotationEnabled">
            <summary>
            Gets and sets the property RotationEnabled. 
            <para>
            Indicates whether automatic, scheduled rotation is enabled for this secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.RotationLambdaARN">
            <summary>
            Gets and sets the property RotationLambdaARN. 
            <para>
            The ARN of an Amazon Web Services Lambda function invoked by Secrets Manager to rotate
            and expire the secret either automatically per the schedule or manually by a call
            to <a href="https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_RotateSecret.html">
            <c>RotateSecret</c> </a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.RotationRules">
            <summary>
            Gets and sets the property RotationRules. 
            <para>
            A structure that defines the rotation configuration for the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.SecretVersionsToStages">
            <summary>
            Gets and sets the property SecretVersionsToStages. 
            <para>
            A list of all of the currently assigned <c>SecretVersionStage</c> staging labels and
            the <c>SecretVersionId</c> attached to each one. Staging labels are used to keep track
            of the different versions during the rotation process.
            </para>
             <note> 
            <para>
            A version that does not have any <c>SecretVersionStage</c> is considered deprecated
            and subject to deletion. Such versions are not included in this list.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretListEntry.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of user-defined tags associated with the secret. To add tags to a secret,
            use <a href="https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_TagResource.html">
            <c>TagResource</c> </a>. To remove tags, use <a href="https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_UntagResource.html">
            <c>UntagResource</c> </a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.SecretValueEntry">
            <summary>
            A structure that contains the secret value and other details for a secret.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretValueEntry.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The Amazon Resource Name (ARN) of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretValueEntry.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date the secret was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretValueEntry.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The friendly name of the secret. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretValueEntry.SecretBinary">
            <summary>
            Gets and sets the property SecretBinary. 
            <para>
            The decrypted secret value, if the secret value was originally provided as binary
            data in the form of a byte array. The parameter represents the binary data as a <a
            href="https://tools.ietf.org/html/rfc4648#section-4">base64-encoded</a> string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretValueEntry.SecretString">
            <summary>
            Gets and sets the property SecretString. 
            <para>
            The decrypted secret value, if the secret value was originally provided as a string
            or through the Secrets Manager console.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretValueEntry.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            The unique version identifier of this version of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretValueEntry.VersionStages">
            <summary>
            Gets and sets the property VersionStages. 
            <para>
            A list of all of the staging labels currently attached to this version of the secret.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.SecretVersionsListEntry">
            <summary>
            A structure that contains information about one version of a secret.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretVersionsListEntry.CreatedDate">
            <summary>
            Gets and sets the property CreatedDate. 
            <para>
            The date and time this version of the secret was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretVersionsListEntry.KmsKeyIds">
            <summary>
            Gets and sets the property KmsKeyIds. 
            <para>
            The KMS keys used to encrypt the secret version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretVersionsListEntry.LastAccessedDate">
            <summary>
            Gets and sets the property LastAccessedDate. 
            <para>
            The date that this version of the secret was last accessed. Note that the resolution
            of this field is at the date level and does not include the time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretVersionsListEntry.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            The unique version identifier of this version of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.SecretVersionsListEntry.VersionStages">
            <summary>
            Gets and sets the property VersionStages. 
            <para>
            An array of staging labels that are currently associated with this version of the
            secret.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.StopReplicationToReplicaRequest">
            <summary>
            Container for the parameters to the StopReplicationToReplica operation.
            Removes the link between the replica secret and the primary secret and promotes the
            replica to a primary secret in the replica Region.
            
             
            <para>
            You must call this operation from the Region in which you want to promote the replica
            to a primary secret.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:StopReplicationToReplica</c>. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.StopReplicationToReplicaRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The ARN of the primary secret. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.StopReplicationToReplicaResponse">
            <summary>
            This is the response object from the StopReplicationToReplica operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.StopReplicationToReplicaResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the promoted secret. The ARN is the same as the original primary secret
            except the Region is changed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.Tag">
            <summary>
            A structure that contains information about a tag.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key identifier, or name, of the tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The string value associated with the key of the tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Attaches tags to a secret. Tags consist of a key name and a value. Tags are part of
            the secret's metadata. They are not associated with specific versions of the secret.
            This operation appends tags to the existing list of tags.
            
             
            <para>
            For tag quotas and naming restrictions, see <a href="https://docs.aws.amazon.com/general/latest/gr/arg.html#taged-reference-quotas">Service
            quotas for Tagging</a> in the <i>Amazon Web Services General Reference guide</i>.
            </para>
             <important> 
            <para>
            If you use tags as part of your security strategy, then adding or removing a tag can
            change permissions. If successfully completing this operation would result in you
            losing your permissions for this secret, then the operation is blocked and returns
            an Access Denied error.
            </para>
             </important> 
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:TagResource</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.TagResourceRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The identifier for the secret to attach tags to. You can specify either the Amazon
            Resource Name (ARN) or the friendly name of the secret.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to attach to the secret as a JSON text string argument. Each element in the
            list consists of a <c>Key</c> and a <c>Value</c>.
            </para>
             
            <para>
            For storing multiple values, we recommend that you use a JSON text string argument
            and specify key/value pairs. For more information, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters.html">Specifying
            parameter values for the Amazon Web Services CLI</a> in the Amazon Web Services CLI
            User Guide.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes specific tags from a secret.
            
             
            <para>
            This operation is idempotent. If a requested tag is not attached to the secret, no
            error is returned and the secret metadata is unchanged.
            </para>
             <important> 
            <para>
            If you use tags as part of your security strategy, then removing a tag can change
            permissions. If successfully completing this operation would result in you losing
            your permissions for this secret, then the operation is blocked and returns an Access
            Denied error.
            </para>
             </important> 
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:UntagResource</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UntagResourceRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The ARN or name of the secret.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            A list of tag key names to remove from the secret. You don't specify the value. Both
            the key and its associated value are removed.
            </para>
             
            <para>
            This parameter requires a JSON text string argument.
            </para>
             
            <para>
            For storing multiple values, we recommend that you use a JSON text string argument
            and specify key/value pairs. For more information, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters.html">Specifying
            parameter values for the Amazon Web Services CLI</a> in the Amazon Web Services CLI
            User Guide.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.UpdateSecretRequest">
            <summary>
            Container for the parameters to the UpdateSecret operation.
            Modifies the details of a secret, including metadata and the secret value. To change
            the secret value, you can also use <a>PutSecretValue</a>.
            
             
            <para>
            To change the rotation configuration of a secret, use <a>RotateSecret</a> instead.
            </para>
             
            <para>
            To change a secret so that it is managed by another service, you need to recreate
            the secret in that service. See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            Manager secrets managed by other Amazon Web Services services</a>.
            </para>
             
            <para>
            We recommend you avoid calling <c>UpdateSecret</c> at a sustained rate of more than
            once every 10 minutes. When you call <c>UpdateSecret</c> to update the secret value,
            Secrets Manager creates a new version of the secret. Secrets Manager removes outdated
            versions when there are more than 100, but it does not remove versions created less
            than 24 hours ago. If you update the secret value more than once every 10 minutes,
            you create more versions than Secrets Manager removes, and you will reach the quota
            for secret versions.
            </para>
             
            <para>
            If you include <c>SecretString</c> or <c>SecretBinary</c> to create a new secret version,
            Secrets Manager automatically moves the staging label <c>AWSCURRENT</c> to the new
            version. Then it attaches the label <c>AWSPREVIOUS</c> to the version that <c>AWSCURRENT</c>
            was removed from.
            </para>
             
            <para>
            If you call this operation with a <c>ClientRequestToken</c> that matches an existing
            version's <c>VersionId</c>, the operation results in an error. You can't modify an
            existing version, you can only create a new version. To remove a version, remove all
            staging labels from it. See <a>UpdateSecretVersionStage</a>.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters except <c>SecretBinary</c> or
            <c>SecretString</c> because it might be logged. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:UpdateSecret</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. If you use a customer managed key, you
            must also have <c>kms:GenerateDataKey</c>, <c>kms:Encrypt</c>, and <c>kms:Decrypt</c>
            permissions on the key. If you change the KMS key and you don't have <c>kms:Encrypt</c>
            permission to the new key, Secrets Manager does not re-encrypt existing secret versions
            with the new key. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/security-encryption.html">
            Secret encryption and decryption</a>.
            </para>
             <important> 
            <para>
            When you enter commands in a command shell, there is a risk of the command history
            being accessed or utilities having access to your command parameters. This is a concern
            if the command includes the value of a secret. Learn how to <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/security_cli-exposure-risks.html">Mitigate
            the risks of using command-line tools to store Secrets Manager secrets</a>.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            If you include <c>SecretString</c> or <c>SecretBinary</c>, then Secrets Manager creates
            a new version for the secret, and this parameter specifies the unique identifier for
            the new version.
            </para>
             <note> 
            <para>
            If you use the Amazon Web Services CLI or one of the Amazon Web Services SDKs to call
            this operation, then you can leave this parameter empty. The CLI or SDK generates
            a random UUID for you and includes it as the value for this parameter in the request.
            
            </para>
             </note> 
            <para>
            If you generate a raw HTTP request to the Secrets Manager service endpoint, then you
            must generate a <c>ClientRequestToken</c> and include it in the request.
            </para>
             
            <para>
            This value helps ensure idempotency. Secrets Manager uses this value to prevent the
            accidental creation of duplicate versions if there are failures and retries during
            a rotation. We recommend that you generate a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID-type</a>
            value to ensure uniqueness of your versions within the specified secret. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The ARN, key ID, or alias of the KMS key that Secrets Manager uses to encrypt new
            secret versions as well as any existing versions with the staging labels <c>AWSCURRENT</c>,
            <c>AWSPENDING</c>, or <c>AWSPREVIOUS</c>. If you don't have <c>kms:Encrypt</c> permission
            to the new key, Secrets Manager does not re-encrypt existing secret versions with
            the new key. For more information about versions and staging labels, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/getting-started.html#term_version">Concepts:
            Version</a>.
            </para>
             
            <para>
            A key alias is always prefixed by <c>alias/</c>, for example <c>alias/aws/secretsmanager</c>.
            For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/alias-about.html">About
            aliases</a>.
            </para>
             
            <para>
            If you set this to an empty string, Secrets Manager uses the Amazon Web Services managed
            key <c>aws/secretsmanager</c>. If this key doesn't already exist in your account,
            then Secrets Manager creates it for you automatically. All users and roles in the
            Amazon Web Services account automatically have access to use <c>aws/secretsmanager</c>.
            Creating <c>aws/secretsmanager</c> can result in a one-time significant delay in returning
            the result. 
            </para>
             <important> 
            <para>
            You can only use the Amazon Web Services managed key <c>aws/secretsmanager</c> if
            you call this operation using credentials from the same Amazon Web Services account
            that owns the secret. If the secret is in a different account, then you must use a
            customer managed key and provide the ARN of that KMS key in this field. The user making
            the call must have permissions to both the secret and the KMS key in their respective
            accounts.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretRequest.SecretBinary">
            <summary>
            Gets and sets the property SecretBinary. 
            <para>
            The binary data to encrypt and store in the new version of the secret. We recommend
            that you store your binary data in a file and then pass the contents of the file as
            a parameter. 
            </para>
             
            <para>
            Either <c>SecretBinary</c> or <c>SecretString</c> must have a value, but not both.
            </para>
             
            <para>
            You can't access this parameter in the Secrets Manager console.
            </para>
             
            <para>
            Sensitive: This field contains sensitive information, so the service does not include
            it in CloudTrail log entries. If you create your own log entries, you must also avoid
            logging the information in this field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The ARN or name of the secret.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretRequest.SecretString">
            <summary>
            Gets and sets the property SecretString. 
            <para>
            The text data to encrypt and store in the new version of the secret. We recommend
            you use a JSON structure of key/value pairs for your secret value. 
            </para>
             
            <para>
            Either <c>SecretBinary</c> or <c>SecretString</c> must have a value, but not both.
            
            </para>
             
            <para>
            Sensitive: This field contains sensitive information, so the service does not include
            it in CloudTrail log entries. If you create your own log entries, you must also avoid
            logging the information in this field.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.UpdateSecretResponse">
            <summary>
            This is the response object from the UpdateSecret operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret that was updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the secret that was updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretResponse.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            If Secrets Manager created a new version of the secret during this operation, then
            <c>VersionId</c> contains the unique identifier of the new version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.UpdateSecretVersionStageRequest">
            <summary>
            Container for the parameters to the UpdateSecretVersionStage operation.
            Modifies the staging labels attached to a version of a secret. Secrets Manager uses
            staging labels to track a version as it progresses through the secret rotation process.
            Each staging label can be attached to only one version at a time. To add a staging
            label to a version when it is already attached to another version, Secrets Manager
            first removes it from the other version first and then attaches it to this one. For
            more information about versions and staging labels, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/getting-started.html#term_version">Concepts:
            Version</a>. 
            
             
            <para>
            The staging labels that you specify in the <c>VersionStage</c> parameter are added
            to the existing list of staging labels for the version. 
            </para>
             
            <para>
            You can move the <c>AWSCURRENT</c> staging label to this version by including it in
            this call.
            </para>
             <note> 
            <para>
            Whenever you move <c>AWSCURRENT</c>, Secrets Manager automatically moves the label
            <c>AWSPREVIOUS</c> to the version that <c>AWSCURRENT</c> was removed from.
            </para>
             </note> 
            <para>
            If this action results in the last label being removed from a version, then the version
            is considered to be 'deprecated' and can be deleted by Secrets Manager.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:UpdateSecretVersionStage</c>. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretVersionStageRequest.MoveToVersionId">
            <summary>
            Gets and sets the property MoveToVersionId. 
            <para>
            The ID of the version to add the staging label to. To remove a label from a version,
            then do not specify this parameter.
            </para>
             
            <para>
            If the staging label is already attached to a different version of the secret, then
            you must also specify the <c>RemoveFromVersionId</c> parameter. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretVersionStageRequest.RemoveFromVersionId">
            <summary>
            Gets and sets the property RemoveFromVersionId. 
            <para>
            The ID of the version that the staging label is to be removed from. If the staging
            label you are trying to attach to one version is already attached to a different version,
            then you must include this parameter and specify the version that the label is to
            be removed from. If the label is attached and you either do not specify this parameter,
            or the version ID does not match, then the operation fails.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretVersionStageRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The ARN or the name of the secret with the version and staging labelsto modify.
            </para>
             
            <para>
            For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretVersionStageRequest.VersionStage">
            <summary>
            Gets and sets the property VersionStage. 
            <para>
            The staging label to add to this version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.UpdateSecretVersionStageResponse">
            <summary>
            This is the response object from the UpdateSecretVersionStage operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretVersionStageResponse.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The ARN of the secret that was updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.UpdateSecretVersionStageResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the secret that was updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ValidateResourcePolicyRequest">
            <summary>
            Container for the parameters to the ValidateResourcePolicy operation.
            Validates that a resource policy does not grant a wide range of principals access
            to your secret. A resource-based policy is optional for secrets.
            
             
            <para>
            The API performs three checks when validating the policy:
            </para>
             <ul> <li> 
            <para>
            Sends a call to <a href="https://aws.amazon.com/blogs/security/protect-sensitive-data-in-the-cloud-with-automated-reasoning-zelkova/">Zelkova</a>,
            an automated reasoning engine, to ensure your resource policy does not allow broad
            access to your secret, for example policies that use a wildcard for the principal.
            </para>
             </li> <li> 
            <para>
            Checks for correct syntax in a policy.
            </para>
             </li> <li> 
            <para>
            Verifies the policy does not lock out a caller.
            </para>
             </li> </ul> 
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:ValidateResourcePolicy</c> and <c>secretsmanager:PutResourcePolicy</c>.
            For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ValidateResourcePolicyRequest.ResourcePolicy">
            <summary>
            Gets and sets the property ResourcePolicy. 
            <para>
            A JSON-formatted string that contains an Amazon Web Services resource-based policy.
            The policy in the string identifies who can access or manage this secret and its versions.
            For example policies, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html">Permissions
            policy examples</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ValidateResourcePolicyRequest.SecretId">
            <summary>
            Gets and sets the property SecretId. 
            <para>
            The ARN or name of the secret with the resource-based policy you want to validate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ValidateResourcePolicyResponse">
            <summary>
            This is the response object from the ValidateResourcePolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ValidateResourcePolicyResponse.PolicyValidationPassed">
            <summary>
            Gets and sets the property PolicyValidationPassed. 
            <para>
            True if your policy passes validation, otherwise false.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ValidateResourcePolicyResponse.ValidationErrors">
            <summary>
            Gets and sets the property ValidationErrors. 
            <para>
            Validation errors if your policy didn't pass validation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ValidationErrorsEntry">
            <summary>
            Displays errors that occurred during validation of the resource policy.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ValidationErrorsEntry.CheckName">
            <summary>
            Gets and sets the property CheckName. 
            <para>
            Checks the name of the policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ValidationErrorsEntry.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            Displays error messages if validation encounters problems during validation of the
            resource policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.BatchGetSecretValuePaginator">
            <summary>
            Base class for BatchGetSecretValue paginators.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.BatchGetSecretValuePaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.IBatchGetSecretValuePaginator">
             <summary>
             Paginator for the BatchGetSecretValue operation
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.IBatchGetSecretValuePaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.IListSecretsPaginator">
             <summary>
             Paginator for the ListSecrets operation
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.IListSecretsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.IListSecretVersionIdsPaginator">
             <summary>
             Paginator for the ListSecretVersionIds operation
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.IListSecretVersionIdsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ISecretsManagerPaginatorFactory">
             <summary>
             Paginators for the SecretsManager service
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ISecretsManagerPaginatorFactory.BatchGetSecretValue(Amazon.SecretsManager.Model.BatchGetSecretValueRequest)">
             <summary>
             Paginator for BatchGetSecretValue operation
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ISecretsManagerPaginatorFactory.ListSecrets(Amazon.SecretsManager.Model.ListSecretsRequest)">
             <summary>
             Paginator for ListSecrets operation
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.ISecretsManagerPaginatorFactory.ListSecretVersionIds(Amazon.SecretsManager.Model.ListSecretVersionIdsRequest)">
             <summary>
             Paginator for ListSecretVersionIds operation
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ListSecretsPaginator">
            <summary>
            Base class for ListSecrets paginators.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.ListSecretVersionIdsPaginator">
            <summary>
            Base class for ListSecretVersionIds paginators.
            </summary>
        </member>
        <member name="P:Amazon.SecretsManager.Model.ListSecretVersionIdsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.Model.SecretsManagerPaginatorFactory">
             <summary>
             Paginators for the SecretsManager service
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.SecretsManagerPaginatorFactory.BatchGetSecretValue(Amazon.SecretsManager.Model.BatchGetSecretValueRequest)">
             <summary>
             Paginator for BatchGetSecretValue operation
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.SecretsManagerPaginatorFactory.ListSecrets(Amazon.SecretsManager.Model.ListSecretsRequest)">
             <summary>
             Paginator for ListSecrets operation
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.Model.SecretsManagerPaginatorFactory.ListSecretVersionIds(Amazon.SecretsManager.Model.ListSecretVersionIdsRequest)">
             <summary>
             Paginator for ListSecretVersionIds operation
            </summary>
        </member>
        <member name="T:Amazon.SecretsManager.FilterNameStringType">
            <summary>
            Constants used for properties of type FilterNameStringType.
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.FilterNameStringType.All">
            <summary>
            Constant All for FilterNameStringType
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.FilterNameStringType.Description">
            <summary>
            Constant Description for FilterNameStringType
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.FilterNameStringType.Name">
            <summary>
            Constant Name for FilterNameStringType
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.FilterNameStringType.OwningService">
            <summary>
            Constant OwningService for FilterNameStringType
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.FilterNameStringType.PrimaryRegion">
            <summary>
            Constant PrimaryRegion for FilterNameStringType
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.FilterNameStringType.TagKey">
            <summary>
            Constant TagKey for FilterNameStringType
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.FilterNameStringType.TagValue">
            <summary>
            Constant TagValue for FilterNameStringType
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.FilterNameStringType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.FilterNameStringType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SecretsManager.FilterNameStringType.op_Implicit(System.String)~Amazon.SecretsManager.FilterNameStringType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SecretsManager.SortOrderType">
            <summary>
            Constants used for properties of type SortOrderType.
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.SortOrderType.Asc">
            <summary>
            Constant Asc for SortOrderType
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.SortOrderType.Desc">
            <summary>
            Constant Desc for SortOrderType
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.SortOrderType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.SortOrderType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SecretsManager.SortOrderType.op_Implicit(System.String)~Amazon.SecretsManager.SortOrderType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SecretsManager.StatusType">
            <summary>
            Constants used for properties of type StatusType.
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.StatusType.Failed">
            <summary>
            Constant Failed for StatusType
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.StatusType.InProgress">
            <summary>
            Constant InProgress for StatusType
            </summary>
        </member>
        <member name="F:Amazon.SecretsManager.StatusType.InSync">
            <summary>
            Constant InSync for StatusType
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.StatusType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.StatusType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SecretsManager.StatusType.op_Implicit(System.String)~Amazon.SecretsManager.StatusType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SecretsManager.AmazonSecretsManagerClient">
             <summary>
             <para>Implementation for accessing SecretsManager</para>
            
             Amazon Web Services Secrets Manager 
             <para>
             Amazon Web Services Secrets Manager provides a service to enable you to store, manage,
             and retrieve, secrets.
             </para>
              
             <para>
             This guide provides descriptions of the Secrets Manager API. For more information
             about using this service, see the <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/introduction.html">Amazon
             Web Services Secrets Manager User Guide</a>.
             </para>
              
             <para>
              <b>API Version</b> 
             </para>
              
             <para>
             This version of the Secrets Manager API Reference documents the Secrets Manager API
             version 2017-10-17.
             </para>
              
             <para>
             For a list of endpoints, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/asm_access.html#endpoints">Amazon
             Web Services Secrets Manager endpoints</a>.
             </para>
              
             <para>
              <b>Support and Feedback for Amazon Web Services Secrets Manager</b> 
             </para>
              
             <para>
             We welcome your feedback. Send your comments to <a href="mailto:awssecretsmanager-feedback@amazon.com">awssecretsmanager-feedback@amazon.com</a>,
             or post your feedback and questions in the <a href="http://forums.aws.amazon.com/forum.jspa?forumID=296">Amazon
             Web Services Secrets Manager Discussion Forum</a>. For more information about the
             Amazon Web Services Discussion Forums, see <a href="http://forums.aws.amazon.com/help.jspa">Forums
             Help</a>.
             </para>
              
             <para>
              <b>Logging API Requests</b> 
             </para>
              
             <para>
             Amazon Web Services Secrets Manager supports Amazon Web Services CloudTrail, a service
             that records Amazon Web Services API calls for your Amazon Web Services account and
             delivers log files to an Amazon S3 bucket. By using information that's collected by
             Amazon Web Services CloudTrail, you can determine the requests successfully made to
             Secrets Manager, who made the request, when it was made, and so on. For more about
             Amazon Web Services Secrets Manager and support for Amazon Web Services CloudTrail,
             see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/monitoring.html#monitoring_cloudtrail">Logging
             Amazon Web Services Secrets Manager Events with Amazon Web Services CloudTrail</a>
             in the <i>Amazon Web Services Secrets Manager User Guide</i>. To learn more about
             CloudTrail, including enabling it and find your log files, see the <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/what_is_cloud_trail_top_level.html">Amazon
             Web Services CloudTrail User Guide</a>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor">
             <summary>
             Constructs AmazonSecretsManagerClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonSecretsManagerClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(Amazon.SecretsManager.AmazonSecretsManagerConfig)">
             <summary>
             Constructs AmazonSecretsManagerClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonSecretsManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonSecretsManagerClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSecretsManagerClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.SecretsManager.AmazonSecretsManagerConfig)">
            <summary>
            Constructs AmazonSecretsManagerClient with AWS Credentials and an
            AmazonSecretsManagerClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonSecretsManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonSecretsManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSecretsManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(System.String,System.String,Amazon.SecretsManager.AmazonSecretsManagerConfig)">
            <summary>
            Constructs AmazonSecretsManagerClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSecretsManagerClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonSecretsManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonSecretsManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSecretsManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.#ctor(System.String,System.String,System.String,Amazon.SecretsManager.AmazonSecretsManagerConfig)">
            <summary>
            Constructs AmazonSecretsManagerClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSecretsManagerClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonSecretsManagerClient Configuration Object</param>
        </member>
        <member name="P:Amazon.SecretsManager.AmazonSecretsManagerClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.SecretsManager.AmazonSecretsManagerClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.BatchGetSecretValueAsync(Amazon.SecretsManager.Model.BatchGetSecretValueRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the contents of the encrypted fields <c>SecretString</c> or <c>SecretBinary</c>
            for up to 20 secrets. To retrieve a single secret, call <a>GetSecretValue</a>. 
            
             
            <para>
            To choose which secrets to retrieve, you can specify a list of secrets by name or
            ARN, or you can use filters. If Secrets Manager encounters errors such as <c>AccessDeniedException</c>
            while attempting to retrieve any of the secrets, you can see the errors in <c>Errors</c>
            in the response.
            </para>
             
            <para>
            Secrets Manager generates CloudTrail <c>GetSecretValue</c> log entries for each secret
            you request when you call this action. Do not include sensitive information in request
            parameters because it might be logged. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:BatchGetSecretValue</c>, and you
            must have <c>secretsmanager:GetSecretValue</c> for each secret. If you use filters,
            you must also have <c>secretsmanager:ListSecrets</c>. If the secrets are encrypted
            using customer-managed keys instead of the Amazon Web Services managed key <c>aws/secretsmanager</c>,
            then you also need <c>kms:Decrypt</c> permissions for the keys. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchGetSecretValue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchGetSecretValue service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.DecryptionFailureException">
            Secrets Manager can't decrypt the protected secret text using the provided KMS key.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidNextTokenException">
            The <c>NextToken</c> value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/BatchGetSecretValue">REST API Reference for BatchGetSecretValue Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.CancelRotateSecretAsync(Amazon.SecretsManager.Model.CancelRotateSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Turns off automatic rotation, and if a rotation is currently in progress, cancels
            the rotation.
            
             
            <para>
            If you cancel a rotation in progress, it can leave the <c>VersionStage</c> labels
            in an unexpected state. You might need to remove the staging label <c>AWSPENDING</c>
            from the partially created version. You also need to determine whether to roll back
            to the previous version of the secret by moving the staging label <c>AWSCURRENT</c>
            to the version that has <c>AWSPENDING</c>. To determine which version has a specific
            staging label, call <a>ListSecretVersionIds</a>. Then use <a>UpdateSecretVersionStage</a>
            to change staging labels. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_how.html">How
            rotation works</a>.
            </para>
             
            <para>
            To turn on automatic rotation again, call <a>RotateSecret</a>.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:CancelRotateSecret</c>. For more
            information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelRotateSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelRotateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/CancelRotateSecret">REST API Reference for CancelRotateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.CreateSecretAsync(Amazon.SecretsManager.Model.CreateSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new secret. A <i>secret</i> can be a password, a set of credentials such
            as a user name and password, an OAuth token, or other secret information that you
            store in an encrypted form in Secrets Manager. The secret also includes the connection
            information to access a database or other service, which Secrets Manager doesn't encrypt.
            A secret in Secrets Manager consists of both the protected secret data and the important
            information needed to manage the secret.
            
             
            <para>
            For secrets that use <i>managed rotation</i>, you need to create the secret through
            the managing service. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            Manager secrets managed by other Amazon Web Services services</a>. 
            </para>
             
            <para>
            For information about creating a secret in the console, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/manage_create-basic-secret.html">Create
            a secret</a>.
            </para>
             
            <para>
            To create a secret, you can provide the secret value to be encrypted in either the
            <c>SecretString</c> parameter or the <c>SecretBinary</c> parameter, but not both.
            If you include <c>SecretString</c> or <c>SecretBinary</c> then Secrets Manager creates
            an initial secret version and automatically attaches the staging label <c>AWSCURRENT</c>
            to it.
            </para>
             
            <para>
            For database credentials you want to rotate, for Secrets Manager to be able to rotate
            the secret, you must make sure the JSON you store in the <c>SecretString</c> matches
            the <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_secret_json_structure.html">JSON
            structure of a database secret</a>.
            </para>
             
            <para>
            If you don't specify an KMS encryption key, Secrets Manager uses the Amazon Web Services
            managed key <c>aws/secretsmanager</c>. If this key doesn't already exist in your account,
            then Secrets Manager creates it for you automatically. All users and roles in the
            Amazon Web Services account automatically have access to use <c>aws/secretsmanager</c>.
            Creating <c>aws/secretsmanager</c> can result in a one-time significant delay in returning
            the result.
            </para>
             
            <para>
            If the secret is in a different Amazon Web Services account from the credentials calling
            the API, then you can't use <c>aws/secretsmanager</c> to encrypt the secret, and you
            must create and use a customer managed KMS key. 
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters except <c>SecretBinary</c> or
            <c>SecretString</c> because it might be logged. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:CreateSecret</c>. If you include
            tags in the secret, you also need <c>secretsmanager:TagResource</c>. To add replica
            Regions, you must also have <c>secretsmanager:ReplicateSecretToRegions</c>. For more
            information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
             
            <para>
            To encrypt the secret with a KMS key other than <c>aws/secretsmanager</c>, you need
            <c>kms:GenerateDataKey</c> and <c>kms:Decrypt</c> permission to the key. 
            </para>
             <important> 
            <para>
            When you enter commands in a command shell, there is a risk of the command history
            being accessed or utilities having access to your command parameters. This is a concern
            if the command includes the value of a secret. Learn how to <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/security_cli-exposure-risks.html">Mitigate
            the risks of using command-line tools to store Secrets Manager secrets</a>.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.DecryptionFailureException">
            Secrets Manager can't decrypt the protected secret text using the provided KMS key.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.EncryptionFailureException">
            Secrets Manager can't encrypt the protected secret text using the provided KMS key.
            Check that the KMS key is available, enabled, and not in an invalid state. For more
            information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            state: Effect on your KMS key</a>.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager quotas.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            The resource policy has syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.PreconditionNotMetException">
            The request failed because you did not complete all the prerequisite steps.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceExistsException">
            A resource with the ID you requested already exists.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/CreateSecret">REST API Reference for CreateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.DeleteResourcePolicyAsync(Amazon.SecretsManager.Model.DeleteResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the resource-based permission policy attached to the secret. To attach a policy
            to a secret, use <a>PutResourcePolicy</a>.
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:DeleteResourcePolicy</c>. For more
            information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/DeleteResourcePolicy">REST API Reference for DeleteResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.DeleteSecretAsync(Amazon.SecretsManager.Model.DeleteSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a secret and all of its versions. You can specify a recovery window during
            which you can restore the secret. The minimum recovery window is 7 days. The default
            recovery window is 30 days. Secrets Manager attaches a <c>DeletionDate</c> stamp to
            the secret that specifies the end of the recovery window. At the end of the recovery
            window, Secrets Manager deletes the secret permanently.
            
             
            <para>
            You can't delete a primary secret that is replicated to other Regions. You must first
            delete the replicas using <a>RemoveRegionsFromReplication</a>, and then delete the
            primary secret. When you delete a replica, it is deleted immediately.
            </para>
             
            <para>
            You can't directly delete a version of a secret. Instead, you remove all staging labels
            from the version using <a>UpdateSecretVersionStage</a>. This marks the version as
            deprecated, and then Secrets Manager can automatically delete the version in the background.
            </para>
             
            <para>
            To determine whether an application still uses a secret, you can create an Amazon
            CloudWatch alarm to alert you to any attempts to access a secret during the recovery
            window. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/monitoring_cloudwatch_deleted-secrets.html">
            Monitor secrets scheduled for deletion</a>.
            </para>
             
            <para>
            Secrets Manager performs the permanent secret deletion at the end of the waiting period
            as a background task with low priority. There is no guarantee of a specific time after
            the recovery window for the permanent delete to occur.
            </para>
             
            <para>
            At any time before recovery window ends, you can use <a>RestoreSecret</a> to remove
            the <c>DeletionDate</c> and cancel the deletion of the secret.
            </para>
             
            <para>
            When a secret is scheduled for deletion, you cannot retrieve the secret value. You
            must first cancel the deletion with <a>RestoreSecret</a> and then you can retrieve
            the secret.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:DeleteSecret</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/DeleteSecret">REST API Reference for DeleteSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.DescribeSecretAsync(Amazon.SecretsManager.Model.DescribeSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the details of a secret. It does not include the encrypted secret value.
            Secrets Manager only returns fields that have a value in the response. 
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:DescribeSecret</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/DescribeSecret">REST API Reference for DescribeSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.GetRandomPasswordAsync(Amazon.SecretsManager.Model.GetRandomPasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Generates a random password. We recommend that you specify the maximum length and
            include every character type that the system you are generating a password for can
            support. By default, Secrets Manager uses uppercase and lowercase letters, numbers,
            and the following characters in passwords: <c>!\"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~</c>
            
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:GetRandomPassword</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRandomPassword service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetRandomPassword service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/GetRandomPassword">REST API Reference for GetRandomPassword Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.GetResourcePolicyAsync(Amazon.SecretsManager.Model.GetResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the JSON text of the resource-based policy document attached to the secret.
            For more information about permissions policies attached to a secret, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_resource-policies.html">Permissions
            policies attached to a secret</a>.
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:GetResourcePolicy</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/GetResourcePolicy">REST API Reference for GetResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.GetSecretValueAsync(Amazon.SecretsManager.Model.GetSecretValueRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the contents of the encrypted fields <c>SecretString</c> or <c>SecretBinary</c>
            from the specified version of a secret, whichever contains content.
            
             
            <para>
            To retrieve the values for a group of secrets, call <a>BatchGetSecretValue</a>.
            </para>
             
            <para>
            We recommend that you cache your secret values by using client-side caching. Caching
            secrets improves speed and reduces your costs. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieving-secrets.html">Cache
            secrets for your applications</a>.
            </para>
             
            <para>
            To retrieve the previous version of a secret, use <c>VersionStage</c> and specify
            AWSPREVIOUS. To revert to the previous version of a secret, call <a href="https://docs.aws.amazon.com/cli/latest/reference/secretsmanager/update-secret-version-stage.html">UpdateSecretVersionStage</a>.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:GetSecretValue</c>. If the secret
            is encrypted using a customer-managed key instead of the Amazon Web Services managed
            key <c>aws/secretsmanager</c>, then you also need <c>kms:Decrypt</c> permissions for
            that key. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSecretValue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSecretValue service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.DecryptionFailureException">
            Secrets Manager can't decrypt the protected secret text using the provided KMS key.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/GetSecretValue">REST API Reference for GetSecretValue Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.ListSecretsAsync(Amazon.SecretsManager.Model.ListSecretsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the secrets that are stored by Secrets Manager in the Amazon Web Services account,
            not including secrets that are marked for deletion. To see secrets marked for deletion,
            use the Secrets Manager console.
            
             
            <para>
            All Secrets Manager operations are eventually consistent. ListSecrets might not reflect
            changes from the last five minutes. You can get more recent information for a specific
            secret by calling <a>DescribeSecret</a>.
            </para>
             
            <para>
            To list the versions of a secret, use <a>ListSecretVersionIds</a>.
            </para>
             
            <para>
            To retrieve the values for the secrets, call <a>BatchGetSecretValue</a> or <a>GetSecretValue</a>.
            </para>
             
            <para>
            For information about finding secrets in the console, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/manage_search-secret.html">Find
            secrets in Secrets Manager</a>.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:ListSecrets</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSecrets service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSecrets service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidNextTokenException">
            The <c>NextToken</c> value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ListSecrets">REST API Reference for ListSecrets Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.ListSecretVersionIdsAsync(Amazon.SecretsManager.Model.ListSecretVersionIdsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the versions of a secret. Secrets Manager uses staging labels to indicate the
            different versions of a secret. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/getting-started.html#term_version">
            Secrets Manager concepts: Versions</a>.
            
             
            <para>
            To list the secrets in the account, use <a>ListSecrets</a>.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:ListSecretVersionIds</c>. For more
            information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSecretVersionIds service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSecretVersionIds service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidNextTokenException">
            The <c>NextToken</c> value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ListSecretVersionIds">REST API Reference for ListSecretVersionIds Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.PutResourcePolicyAsync(Amazon.SecretsManager.Model.PutResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Attaches a resource-based permission policy to a secret. A resource-based policy is
            optional. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control for Secrets Manager</a> 
            
             
            <para>
            For information about attaching a policy in the console, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_resource-based-policies.html">Attach
            a permissions policy to a secret</a>.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:PutResourcePolicy</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            The resource policy has syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.PublicPolicyException">
            The <c>BlockPublicPolicy</c> parameter is set to true, and the resource policy did
            not prevent broad access to the secret.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/PutResourcePolicy">REST API Reference for PutResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.PutSecretValueAsync(Amazon.SecretsManager.Model.PutSecretValueRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new version with a new encrypted secret value and attaches it to the secret.
            The version can contain a new <c>SecretString</c> value or a new <c>SecretBinary</c>
            value. 
            
             
            <para>
            We recommend you avoid calling <c>PutSecretValue</c> at a sustained rate of more than
            once every 10 minutes. When you update the secret value, Secrets Manager creates a
            new version of the secret. Secrets Manager removes outdated versions when there are
            more than 100, but it does not remove versions created less than 24 hours ago. If
            you call <c>PutSecretValue</c> more than once every 10 minutes, you create more versions
            than Secrets Manager removes, and you will reach the quota for secret versions.
            </para>
             
            <para>
            You can specify the staging labels to attach to the new version in <c>VersionStages</c>.
            If you don't include <c>VersionStages</c>, then Secrets Manager automatically moves
            the staging label <c>AWSCURRENT</c> to this version. If this operation creates the
            first version for the secret, then Secrets Manager automatically attaches the staging
            label <c>AWSCURRENT</c> to it. If this operation moves the staging label <c>AWSCURRENT</c>
            from another version to this version, then Secrets Manager also automatically moves
            the staging label <c>AWSPREVIOUS</c> to the version that <c>AWSCURRENT</c> was removed
            from.
            </para>
             
            <para>
            This operation is idempotent. If you call this operation with a <c>ClientRequestToken</c>
            that matches an existing version's VersionId, and you specify the same secret data,
            the operation succeeds but does nothing. However, if the secret data is different,
            then the operation fails because you can't modify an existing version; you can only
            create new ones.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters except <c>SecretBinary</c>, <c>SecretString</c>,
            or <c>RotationToken</c> because it might be logged. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:PutSecretValue</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
             <important> 
            <para>
            When you enter commands in a command shell, there is a risk of the command history
            being accessed or utilities having access to your command parameters. This is a concern
            if the command includes the value of a secret. Learn how to <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/security_cli-exposure-risks.html">Mitigate
            the risks of using command-line tools to store Secrets Manager secrets</a>.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSecretValue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutSecretValue service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.DecryptionFailureException">
            Secrets Manager can't decrypt the protected secret text using the provided KMS key.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.EncryptionFailureException">
            Secrets Manager can't encrypt the protected secret text using the provided KMS key.
            Check that the KMS key is available, enabled, and not in an invalid state. For more
            information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            state: Effect on your KMS key</a>.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager quotas.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceExistsException">
            A resource with the ID you requested already exists.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/PutSecretValue">REST API Reference for PutSecretValue Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.RemoveRegionsFromReplicationAsync(Amazon.SecretsManager.Model.RemoveRegionsFromReplicationRequest,System.Threading.CancellationToken)">
            <summary>
            For a secret that is replicated to other Regions, deletes the secret replicas from
            the Regions you specify.
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:RemoveRegionsFromReplication</c>.
            For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveRegionsFromReplication service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveRegionsFromReplication service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/RemoveRegionsFromReplication">REST API Reference for RemoveRegionsFromReplication Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.ReplicateSecretToRegionsAsync(Amazon.SecretsManager.Model.ReplicateSecretToRegionsRequest,System.Threading.CancellationToken)">
            <summary>
            Replicates the secret to a new Regions. See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/create-manage-multi-region-secrets.html">Multi-Region
            secrets</a>.
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:ReplicateSecretToRegions</c>. If
            the primary secret is encrypted with a KMS key other than <c>aws/secretsmanager</c>,
            you also need <c>kms:Decrypt</c> permission to the key. To encrypt the replicated
            secret with a KMS key other than <c>aws/secretsmanager</c>, you need <c>kms:GenerateDataKey</c>
            and <c>kms:Encrypt</c> to the key. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReplicateSecretToRegions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ReplicateSecretToRegions service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ReplicateSecretToRegions">REST API Reference for ReplicateSecretToRegions Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.RestoreSecretAsync(Amazon.SecretsManager.Model.RestoreSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels the scheduled deletion of a secret by removing the <c>DeletedDate</c> time
            stamp. You can access a secret again after it has been restored.
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:RestoreSecret</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RestoreSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/RestoreSecret">REST API Reference for RestoreSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.RotateSecretAsync(Amazon.SecretsManager.Model.RotateSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Configures and starts the asynchronous process of rotating the secret. For information
            about rotation, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html">Rotate
            secrets</a> in the <i>Secrets Manager User Guide</i>. If you include the configuration
            parameters, the operation sets the values for the secret and then immediately starts
            a rotation. If you don't include the configuration parameters, the operation starts
            a rotation with the values already stored in the secret. 
            
             
            <para>
            When rotation is successful, the <c>AWSPENDING</c> staging label might be attached
            to the same version as the <c>AWSCURRENT</c> version, or it might not be attached
            to any version. If the <c>AWSPENDING</c> staging label is present but not attached
            to the same version as <c>AWSCURRENT</c>, then any later invocation of <c>RotateSecret</c>
            assumes that a previous rotation request is still in progress and returns an error.
            When rotation is unsuccessful, the <c>AWSPENDING</c> staging label might be attached
            to an empty secret version. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot_rotation.html">Troubleshoot
            rotation</a> in the <i>Secrets Manager User Guide</i>.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:RotateSecret</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. You also need <c>lambda:InvokeFunction</c>
            permissions on the rotation function. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets-required-permissions-function.html">
            Permissions for rotation</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RotateSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RotateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/RotateSecret">REST API Reference for RotateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.StopReplicationToReplicaAsync(Amazon.SecretsManager.Model.StopReplicationToReplicaRequest,System.Threading.CancellationToken)">
            <summary>
            Removes the link between the replica secret and the primary secret and promotes the
            replica to a primary secret in the replica Region.
            
             
            <para>
            You must call this operation from the Region in which you want to promote the replica
            to a primary secret.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:StopReplicationToReplica</c>. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopReplicationToReplica service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopReplicationToReplica service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/StopReplicationToReplica">REST API Reference for StopReplicationToReplica Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.TagResourceAsync(Amazon.SecretsManager.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Attaches tags to a secret. Tags consist of a key name and a value. Tags are part of
            the secret's metadata. They are not associated with specific versions of the secret.
            This operation appends tags to the existing list of tags.
            
             
            <para>
            For tag quotas and naming restrictions, see <a href="https://docs.aws.amazon.com/general/latest/gr/arg.html#taged-reference-quotas">Service
            quotas for Tagging</a> in the <i>Amazon Web Services General Reference guide</i>.
            </para>
             <important> 
            <para>
            If you use tags as part of your security strategy, then adding or removing a tag can
            change permissions. If successfully completing this operation would result in you
            losing your permissions for this secret, then the operation is blocked and returns
            an Access Denied error.
            </para>
             </important> 
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:TagResource</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.UntagResourceAsync(Amazon.SecretsManager.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes specific tags from a secret.
            
             
            <para>
            This operation is idempotent. If a requested tag is not attached to the secret, no
            error is returned and the secret metadata is unchanged.
            </para>
             <important> 
            <para>
            If you use tags as part of your security strategy, then removing a tag can change
            permissions. If successfully completing this operation would result in you losing
            your permissions for this secret, then the operation is blocked and returns an Access
            Denied error.
            </para>
             </important> 
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:UntagResource</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.UpdateSecretAsync(Amazon.SecretsManager.Model.UpdateSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the details of a secret, including metadata and the secret value. To change
            the secret value, you can also use <a>PutSecretValue</a>.
            
             
            <para>
            To change the rotation configuration of a secret, use <a>RotateSecret</a> instead.
            </para>
             
            <para>
            To change a secret so that it is managed by another service, you need to recreate
            the secret in that service. See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            Manager secrets managed by other Amazon Web Services services</a>.
            </para>
             
            <para>
            We recommend you avoid calling <c>UpdateSecret</c> at a sustained rate of more than
            once every 10 minutes. When you call <c>UpdateSecret</c> to update the secret value,
            Secrets Manager creates a new version of the secret. Secrets Manager removes outdated
            versions when there are more than 100, but it does not remove versions created less
            than 24 hours ago. If you update the secret value more than once every 10 minutes,
            you create more versions than Secrets Manager removes, and you will reach the quota
            for secret versions.
            </para>
             
            <para>
            If you include <c>SecretString</c> or <c>SecretBinary</c> to create a new secret version,
            Secrets Manager automatically moves the staging label <c>AWSCURRENT</c> to the new
            version. Then it attaches the label <c>AWSPREVIOUS</c> to the version that <c>AWSCURRENT</c>
            was removed from.
            </para>
             
            <para>
            If you call this operation with a <c>ClientRequestToken</c> that matches an existing
            version's <c>VersionId</c>, the operation results in an error. You can't modify an
            existing version, you can only create a new version. To remove a version, remove all
            staging labels from it. See <a>UpdateSecretVersionStage</a>.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters except <c>SecretBinary</c> or
            <c>SecretString</c> because it might be logged. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:UpdateSecret</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. If you use a customer managed key, you
            must also have <c>kms:GenerateDataKey</c>, <c>kms:Encrypt</c>, and <c>kms:Decrypt</c>
            permissions on the key. If you change the KMS key and you don't have <c>kms:Encrypt</c>
            permission to the new key, Secrets Manager does not re-encrypt existing secret versions
            with the new key. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/security-encryption.html">
            Secret encryption and decryption</a>.
            </para>
             <important> 
            <para>
            When you enter commands in a command shell, there is a risk of the command history
            being accessed or utilities having access to your command parameters. This is a concern
            if the command includes the value of a secret. Learn how to <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/security_cli-exposure-risks.html">Mitigate
            the risks of using command-line tools to store Secrets Manager secrets</a>.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.DecryptionFailureException">
            Secrets Manager can't decrypt the protected secret text using the provided KMS key.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.EncryptionFailureException">
            Secrets Manager can't encrypt the protected secret text using the provided KMS key.
            Check that the KMS key is available, enabled, and not in an invalid state. For more
            information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            state: Effect on your KMS key</a>.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager quotas.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            The resource policy has syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.PreconditionNotMetException">
            The request failed because you did not complete all the prerequisite steps.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceExistsException">
            A resource with the ID you requested already exists.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/UpdateSecret">REST API Reference for UpdateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.UpdateSecretVersionStageAsync(Amazon.SecretsManager.Model.UpdateSecretVersionStageRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the staging labels attached to a version of a secret. Secrets Manager uses
            staging labels to track a version as it progresses through the secret rotation process.
            Each staging label can be attached to only one version at a time. To add a staging
            label to a version when it is already attached to another version, Secrets Manager
            first removes it from the other version first and then attaches it to this one. For
            more information about versions and staging labels, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/getting-started.html#term_version">Concepts:
            Version</a>. 
            
             
            <para>
            The staging labels that you specify in the <c>VersionStage</c> parameter are added
            to the existing list of staging labels for the version. 
            </para>
             
            <para>
            You can move the <c>AWSCURRENT</c> staging label to this version by including it in
            this call.
            </para>
             <note> 
            <para>
            Whenever you move <c>AWSCURRENT</c>, Secrets Manager automatically moves the label
            <c>AWSPREVIOUS</c> to the version that <c>AWSCURRENT</c> was removed from.
            </para>
             </note> 
            <para>
            If this action results in the last label being removed from a version, then the version
            is considered to be 'deprecated' and can be deleted by Secrets Manager.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:UpdateSecretVersionStage</c>. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSecretVersionStage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSecretVersionStage service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager quotas.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/UpdateSecretVersionStage">REST API Reference for UpdateSecretVersionStage Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.ValidateResourcePolicyAsync(Amazon.SecretsManager.Model.ValidateResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Validates that a resource policy does not grant a wide range of principals access
            to your secret. A resource-based policy is optional for secrets.
            
             
            <para>
            The API performs three checks when validating the policy:
            </para>
             <ul> <li> 
            <para>
            Sends a call to <a href="https://aws.amazon.com/blogs/security/protect-sensitive-data-in-the-cloud-with-automated-reasoning-zelkova/">Zelkova</a>,
            an automated reasoning engine, to ensure your resource policy does not allow broad
            access to your secret, for example policies that use a wildcard for the principal.
            </para>
             </li> <li> 
            <para>
            Checks for correct syntax in a policy.
            </para>
             </li> <li> 
            <para>
            Verifies the policy does not lock out a caller.
            </para>
             </li> </ul> 
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:ValidateResourcePolicy</c> and <c>secretsmanager:PutResourcePolicy</c>.
            For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ValidateResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ValidateResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            The resource policy has syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ValidateResourcePolicy">REST API Reference for ValidateResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.AmazonSecretsManagerClient.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
        <member name="T:Amazon.SecretsManager.IAmazonSecretsManager">
             <summary>
             <para>Interface for accessing SecretsManager</para>
            
             Amazon Web Services Secrets Manager 
             <para>
             Amazon Web Services Secrets Manager provides a service to enable you to store, manage,
             and retrieve, secrets.
             </para>
              
             <para>
             This guide provides descriptions of the Secrets Manager API. For more information
             about using this service, see the <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/introduction.html">Amazon
             Web Services Secrets Manager User Guide</a>.
             </para>
              
             <para>
              <b>API Version</b> 
             </para>
              
             <para>
             This version of the Secrets Manager API Reference documents the Secrets Manager API
             version 2017-10-17.
             </para>
              
             <para>
             For a list of endpoints, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/asm_access.html#endpoints">Amazon
             Web Services Secrets Manager endpoints</a>.
             </para>
              
             <para>
              <b>Support and Feedback for Amazon Web Services Secrets Manager</b> 
             </para>
              
             <para>
             We welcome your feedback. Send your comments to <a href="mailto:awssecretsmanager-feedback@amazon.com">awssecretsmanager-feedback@amazon.com</a>,
             or post your feedback and questions in the <a href="http://forums.aws.amazon.com/forum.jspa?forumID=296">Amazon
             Web Services Secrets Manager Discussion Forum</a>. For more information about the
             Amazon Web Services Discussion Forums, see <a href="http://forums.aws.amazon.com/help.jspa">Forums
             Help</a>.
             </para>
              
             <para>
              <b>Logging API Requests</b> 
             </para>
              
             <para>
             Amazon Web Services Secrets Manager supports Amazon Web Services CloudTrail, a service
             that records Amazon Web Services API calls for your Amazon Web Services account and
             delivers log files to an Amazon S3 bucket. By using information that's collected by
             Amazon Web Services CloudTrail, you can determine the requests successfully made to
             Secrets Manager, who made the request, when it was made, and so on. For more about
             Amazon Web Services Secrets Manager and support for Amazon Web Services CloudTrail,
             see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/monitoring.html#monitoring_cloudtrail">Logging
             Amazon Web Services Secrets Manager Events with Amazon Web Services CloudTrail</a>
             in the <i>Amazon Web Services Secrets Manager User Guide</i>. To learn more about
             CloudTrail, including enabling it and find your log files, see the <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/what_is_cloud_trail_top_level.html">Amazon
             Web Services CloudTrail User Guide</a>.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.SecretsManager.IAmazonSecretsManager.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.BatchGetSecretValueAsync(Amazon.SecretsManager.Model.BatchGetSecretValueRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the contents of the encrypted fields <c>SecretString</c> or <c>SecretBinary</c>
            for up to 20 secrets. To retrieve a single secret, call <a>GetSecretValue</a>. 
            
             
            <para>
            To choose which secrets to retrieve, you can specify a list of secrets by name or
            ARN, or you can use filters. If Secrets Manager encounters errors such as <c>AccessDeniedException</c>
            while attempting to retrieve any of the secrets, you can see the errors in <c>Errors</c>
            in the response.
            </para>
             
            <para>
            Secrets Manager generates CloudTrail <c>GetSecretValue</c> log entries for each secret
            you request when you call this action. Do not include sensitive information in request
            parameters because it might be logged. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:BatchGetSecretValue</c>, and you
            must have <c>secretsmanager:GetSecretValue</c> for each secret. If you use filters,
            you must also have <c>secretsmanager:ListSecrets</c>. If the secrets are encrypted
            using customer-managed keys instead of the Amazon Web Services managed key <c>aws/secretsmanager</c>,
            then you also need <c>kms:Decrypt</c> permissions for the keys. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchGetSecretValue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchGetSecretValue service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.DecryptionFailureException">
            Secrets Manager can't decrypt the protected secret text using the provided KMS key.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidNextTokenException">
            The <c>NextToken</c> value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/BatchGetSecretValue">REST API Reference for BatchGetSecretValue Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.CancelRotateSecretAsync(Amazon.SecretsManager.Model.CancelRotateSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Turns off automatic rotation, and if a rotation is currently in progress, cancels
            the rotation.
            
             
            <para>
            If you cancel a rotation in progress, it can leave the <c>VersionStage</c> labels
            in an unexpected state. You might need to remove the staging label <c>AWSPENDING</c>
            from the partially created version. You also need to determine whether to roll back
            to the previous version of the secret by moving the staging label <c>AWSCURRENT</c>
            to the version that has <c>AWSPENDING</c>. To determine which version has a specific
            staging label, call <a>ListSecretVersionIds</a>. Then use <a>UpdateSecretVersionStage</a>
            to change staging labels. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_how.html">How
            rotation works</a>.
            </para>
             
            <para>
            To turn on automatic rotation again, call <a>RotateSecret</a>.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:CancelRotateSecret</c>. For more
            information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelRotateSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelRotateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/CancelRotateSecret">REST API Reference for CancelRotateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.CreateSecretAsync(Amazon.SecretsManager.Model.CreateSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new secret. A <i>secret</i> can be a password, a set of credentials such
            as a user name and password, an OAuth token, or other secret information that you
            store in an encrypted form in Secrets Manager. The secret also includes the connection
            information to access a database or other service, which Secrets Manager doesn't encrypt.
            A secret in Secrets Manager consists of both the protected secret data and the important
            information needed to manage the secret.
            
             
            <para>
            For secrets that use <i>managed rotation</i>, you need to create the secret through
            the managing service. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            Manager secrets managed by other Amazon Web Services services</a>. 
            </para>
             
            <para>
            For information about creating a secret in the console, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/manage_create-basic-secret.html">Create
            a secret</a>.
            </para>
             
            <para>
            To create a secret, you can provide the secret value to be encrypted in either the
            <c>SecretString</c> parameter or the <c>SecretBinary</c> parameter, but not both.
            If you include <c>SecretString</c> or <c>SecretBinary</c> then Secrets Manager creates
            an initial secret version and automatically attaches the staging label <c>AWSCURRENT</c>
            to it.
            </para>
             
            <para>
            For database credentials you want to rotate, for Secrets Manager to be able to rotate
            the secret, you must make sure the JSON you store in the <c>SecretString</c> matches
            the <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_secret_json_structure.html">JSON
            structure of a database secret</a>.
            </para>
             
            <para>
            If you don't specify an KMS encryption key, Secrets Manager uses the Amazon Web Services
            managed key <c>aws/secretsmanager</c>. If this key doesn't already exist in your account,
            then Secrets Manager creates it for you automatically. All users and roles in the
            Amazon Web Services account automatically have access to use <c>aws/secretsmanager</c>.
            Creating <c>aws/secretsmanager</c> can result in a one-time significant delay in returning
            the result.
            </para>
             
            <para>
            If the secret is in a different Amazon Web Services account from the credentials calling
            the API, then you can't use <c>aws/secretsmanager</c> to encrypt the secret, and you
            must create and use a customer managed KMS key. 
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters except <c>SecretBinary</c> or
            <c>SecretString</c> because it might be logged. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:CreateSecret</c>. If you include
            tags in the secret, you also need <c>secretsmanager:TagResource</c>. To add replica
            Regions, you must also have <c>secretsmanager:ReplicateSecretToRegions</c>. For more
            information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
             
            <para>
            To encrypt the secret with a KMS key other than <c>aws/secretsmanager</c>, you need
            <c>kms:GenerateDataKey</c> and <c>kms:Decrypt</c> permission to the key. 
            </para>
             <important> 
            <para>
            When you enter commands in a command shell, there is a risk of the command history
            being accessed or utilities having access to your command parameters. This is a concern
            if the command includes the value of a secret. Learn how to <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/security_cli-exposure-risks.html">Mitigate
            the risks of using command-line tools to store Secrets Manager secrets</a>.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.DecryptionFailureException">
            Secrets Manager can't decrypt the protected secret text using the provided KMS key.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.EncryptionFailureException">
            Secrets Manager can't encrypt the protected secret text using the provided KMS key.
            Check that the KMS key is available, enabled, and not in an invalid state. For more
            information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            state: Effect on your KMS key</a>.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager quotas.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            The resource policy has syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.PreconditionNotMetException">
            The request failed because you did not complete all the prerequisite steps.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceExistsException">
            A resource with the ID you requested already exists.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/CreateSecret">REST API Reference for CreateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.DeleteResourcePolicyAsync(Amazon.SecretsManager.Model.DeleteResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the resource-based permission policy attached to the secret. To attach a policy
            to a secret, use <a>PutResourcePolicy</a>.
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:DeleteResourcePolicy</c>. For more
            information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/DeleteResourcePolicy">REST API Reference for DeleteResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.DeleteSecretAsync(Amazon.SecretsManager.Model.DeleteSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a secret and all of its versions. You can specify a recovery window during
            which you can restore the secret. The minimum recovery window is 7 days. The default
            recovery window is 30 days. Secrets Manager attaches a <c>DeletionDate</c> stamp to
            the secret that specifies the end of the recovery window. At the end of the recovery
            window, Secrets Manager deletes the secret permanently.
            
             
            <para>
            You can't delete a primary secret that is replicated to other Regions. You must first
            delete the replicas using <a>RemoveRegionsFromReplication</a>, and then delete the
            primary secret. When you delete a replica, it is deleted immediately.
            </para>
             
            <para>
            You can't directly delete a version of a secret. Instead, you remove all staging labels
            from the version using <a>UpdateSecretVersionStage</a>. This marks the version as
            deprecated, and then Secrets Manager can automatically delete the version in the background.
            </para>
             
            <para>
            To determine whether an application still uses a secret, you can create an Amazon
            CloudWatch alarm to alert you to any attempts to access a secret during the recovery
            window. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/monitoring_cloudwatch_deleted-secrets.html">
            Monitor secrets scheduled for deletion</a>.
            </para>
             
            <para>
            Secrets Manager performs the permanent secret deletion at the end of the waiting period
            as a background task with low priority. There is no guarantee of a specific time after
            the recovery window for the permanent delete to occur.
            </para>
             
            <para>
            At any time before recovery window ends, you can use <a>RestoreSecret</a> to remove
            the <c>DeletionDate</c> and cancel the deletion of the secret.
            </para>
             
            <para>
            When a secret is scheduled for deletion, you cannot retrieve the secret value. You
            must first cancel the deletion with <a>RestoreSecret</a> and then you can retrieve
            the secret.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:DeleteSecret</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/DeleteSecret">REST API Reference for DeleteSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.DescribeSecretAsync(Amazon.SecretsManager.Model.DescribeSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the details of a secret. It does not include the encrypted secret value.
            Secrets Manager only returns fields that have a value in the response. 
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:DescribeSecret</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/DescribeSecret">REST API Reference for DescribeSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.GetRandomPasswordAsync(Amazon.SecretsManager.Model.GetRandomPasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Generates a random password. We recommend that you specify the maximum length and
            include every character type that the system you are generating a password for can
            support. By default, Secrets Manager uses uppercase and lowercase letters, numbers,
            and the following characters in passwords: <c>!\"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~</c>
            
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:GetRandomPassword</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRandomPassword service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetRandomPassword service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/GetRandomPassword">REST API Reference for GetRandomPassword Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.GetResourcePolicyAsync(Amazon.SecretsManager.Model.GetResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the JSON text of the resource-based policy document attached to the secret.
            For more information about permissions policies attached to a secret, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_resource-policies.html">Permissions
            policies attached to a secret</a>.
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:GetResourcePolicy</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/GetResourcePolicy">REST API Reference for GetResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.GetSecretValueAsync(Amazon.SecretsManager.Model.GetSecretValueRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the contents of the encrypted fields <c>SecretString</c> or <c>SecretBinary</c>
            from the specified version of a secret, whichever contains content.
            
             
            <para>
            To retrieve the values for a group of secrets, call <a>BatchGetSecretValue</a>.
            </para>
             
            <para>
            We recommend that you cache your secret values by using client-side caching. Caching
            secrets improves speed and reduces your costs. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieving-secrets.html">Cache
            secrets for your applications</a>.
            </para>
             
            <para>
            To retrieve the previous version of a secret, use <c>VersionStage</c> and specify
            AWSPREVIOUS. To revert to the previous version of a secret, call <a href="https://docs.aws.amazon.com/cli/latest/reference/secretsmanager/update-secret-version-stage.html">UpdateSecretVersionStage</a>.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:GetSecretValue</c>. If the secret
            is encrypted using a customer-managed key instead of the Amazon Web Services managed
            key <c>aws/secretsmanager</c>, then you also need <c>kms:Decrypt</c> permissions for
            that key. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSecretValue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSecretValue service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.DecryptionFailureException">
            Secrets Manager can't decrypt the protected secret text using the provided KMS key.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/GetSecretValue">REST API Reference for GetSecretValue Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.ListSecretsAsync(Amazon.SecretsManager.Model.ListSecretsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the secrets that are stored by Secrets Manager in the Amazon Web Services account,
            not including secrets that are marked for deletion. To see secrets marked for deletion,
            use the Secrets Manager console.
            
             
            <para>
            All Secrets Manager operations are eventually consistent. ListSecrets might not reflect
            changes from the last five minutes. You can get more recent information for a specific
            secret by calling <a>DescribeSecret</a>.
            </para>
             
            <para>
            To list the versions of a secret, use <a>ListSecretVersionIds</a>.
            </para>
             
            <para>
            To retrieve the values for the secrets, call <a>BatchGetSecretValue</a> or <a>GetSecretValue</a>.
            </para>
             
            <para>
            For information about finding secrets in the console, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/manage_search-secret.html">Find
            secrets in Secrets Manager</a>.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:ListSecrets</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSecrets service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSecrets service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidNextTokenException">
            The <c>NextToken</c> value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ListSecrets">REST API Reference for ListSecrets Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.ListSecretVersionIdsAsync(Amazon.SecretsManager.Model.ListSecretVersionIdsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the versions of a secret. Secrets Manager uses staging labels to indicate the
            different versions of a secret. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/getting-started.html#term_version">
            Secrets Manager concepts: Versions</a>.
            
             
            <para>
            To list the secrets in the account, use <a>ListSecrets</a>.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:ListSecretVersionIds</c>. For more
            information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSecretVersionIds service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListSecretVersionIds service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidNextTokenException">
            The <c>NextToken</c> value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ListSecretVersionIds">REST API Reference for ListSecretVersionIds Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.PutResourcePolicyAsync(Amazon.SecretsManager.Model.PutResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Attaches a resource-based permission policy to a secret. A resource-based policy is
            optional. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control for Secrets Manager</a> 
            
             
            <para>
            For information about attaching a policy in the console, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_resource-based-policies.html">Attach
            a permissions policy to a secret</a>.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:PutResourcePolicy</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            The resource policy has syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.PublicPolicyException">
            The <c>BlockPublicPolicy</c> parameter is set to true, and the resource policy did
            not prevent broad access to the secret.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/PutResourcePolicy">REST API Reference for PutResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.PutSecretValueAsync(Amazon.SecretsManager.Model.PutSecretValueRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new version with a new encrypted secret value and attaches it to the secret.
            The version can contain a new <c>SecretString</c> value or a new <c>SecretBinary</c>
            value. 
            
             
            <para>
            We recommend you avoid calling <c>PutSecretValue</c> at a sustained rate of more than
            once every 10 minutes. When you update the secret value, Secrets Manager creates a
            new version of the secret. Secrets Manager removes outdated versions when there are
            more than 100, but it does not remove versions created less than 24 hours ago. If
            you call <c>PutSecretValue</c> more than once every 10 minutes, you create more versions
            than Secrets Manager removes, and you will reach the quota for secret versions.
            </para>
             
            <para>
            You can specify the staging labels to attach to the new version in <c>VersionStages</c>.
            If you don't include <c>VersionStages</c>, then Secrets Manager automatically moves
            the staging label <c>AWSCURRENT</c> to this version. If this operation creates the
            first version for the secret, then Secrets Manager automatically attaches the staging
            label <c>AWSCURRENT</c> to it. If this operation moves the staging label <c>AWSCURRENT</c>
            from another version to this version, then Secrets Manager also automatically moves
            the staging label <c>AWSPREVIOUS</c> to the version that <c>AWSCURRENT</c> was removed
            from.
            </para>
             
            <para>
            This operation is idempotent. If you call this operation with a <c>ClientRequestToken</c>
            that matches an existing version's VersionId, and you specify the same secret data,
            the operation succeeds but does nothing. However, if the secret data is different,
            then the operation fails because you can't modify an existing version; you can only
            create new ones.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters except <c>SecretBinary</c>, <c>SecretString</c>,
            or <c>RotationToken</c> because it might be logged. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:PutSecretValue</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
             <important> 
            <para>
            When you enter commands in a command shell, there is a risk of the command history
            being accessed or utilities having access to your command parameters. This is a concern
            if the command includes the value of a secret. Learn how to <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/security_cli-exposure-risks.html">Mitigate
            the risks of using command-line tools to store Secrets Manager secrets</a>.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSecretValue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutSecretValue service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.DecryptionFailureException">
            Secrets Manager can't decrypt the protected secret text using the provided KMS key.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.EncryptionFailureException">
            Secrets Manager can't encrypt the protected secret text using the provided KMS key.
            Check that the KMS key is available, enabled, and not in an invalid state. For more
            information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            state: Effect on your KMS key</a>.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager quotas.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceExistsException">
            A resource with the ID you requested already exists.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/PutSecretValue">REST API Reference for PutSecretValue Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.RemoveRegionsFromReplicationAsync(Amazon.SecretsManager.Model.RemoveRegionsFromReplicationRequest,System.Threading.CancellationToken)">
            <summary>
            For a secret that is replicated to other Regions, deletes the secret replicas from
            the Regions you specify.
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:RemoveRegionsFromReplication</c>.
            For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveRegionsFromReplication service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveRegionsFromReplication service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/RemoveRegionsFromReplication">REST API Reference for RemoveRegionsFromReplication Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.ReplicateSecretToRegionsAsync(Amazon.SecretsManager.Model.ReplicateSecretToRegionsRequest,System.Threading.CancellationToken)">
            <summary>
            Replicates the secret to a new Regions. See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/create-manage-multi-region-secrets.html">Multi-Region
            secrets</a>.
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:ReplicateSecretToRegions</c>. If
            the primary secret is encrypted with a KMS key other than <c>aws/secretsmanager</c>,
            you also need <c>kms:Decrypt</c> permission to the key. To encrypt the replicated
            secret with a KMS key other than <c>aws/secretsmanager</c>, you need <c>kms:GenerateDataKey</c>
            and <c>kms:Encrypt</c> to the key. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReplicateSecretToRegions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ReplicateSecretToRegions service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ReplicateSecretToRegions">REST API Reference for ReplicateSecretToRegions Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.RestoreSecretAsync(Amazon.SecretsManager.Model.RestoreSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels the scheduled deletion of a secret by removing the <c>DeletedDate</c> time
            stamp. You can access a secret again after it has been restored.
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:RestoreSecret</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RestoreSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/RestoreSecret">REST API Reference for RestoreSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.RotateSecretAsync(Amazon.SecretsManager.Model.RotateSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Configures and starts the asynchronous process of rotating the secret. For information
            about rotation, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html">Rotate
            secrets</a> in the <i>Secrets Manager User Guide</i>. If you include the configuration
            parameters, the operation sets the values for the secret and then immediately starts
            a rotation. If you don't include the configuration parameters, the operation starts
            a rotation with the values already stored in the secret. 
            
             
            <para>
            When rotation is successful, the <c>AWSPENDING</c> staging label might be attached
            to the same version as the <c>AWSCURRENT</c> version, or it might not be attached
            to any version. If the <c>AWSPENDING</c> staging label is present but not attached
            to the same version as <c>AWSCURRENT</c>, then any later invocation of <c>RotateSecret</c>
            assumes that a previous rotation request is still in progress and returns an error.
            When rotation is unsuccessful, the <c>AWSPENDING</c> staging label might be attached
            to an empty secret version. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot_rotation.html">Troubleshoot
            rotation</a> in the <i>Secrets Manager User Guide</i>.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:RotateSecret</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. You also need <c>lambda:InvokeFunction</c>
            permissions on the rotation function. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets-required-permissions-function.html">
            Permissions for rotation</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RotateSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RotateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/RotateSecret">REST API Reference for RotateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.StopReplicationToReplicaAsync(Amazon.SecretsManager.Model.StopReplicationToReplicaRequest,System.Threading.CancellationToken)">
            <summary>
            Removes the link between the replica secret and the primary secret and promotes the
            replica to a primary secret in the replica Region.
            
             
            <para>
            You must call this operation from the Region in which you want to promote the replica
            to a primary secret.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:StopReplicationToReplica</c>. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopReplicationToReplica service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopReplicationToReplica service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/StopReplicationToReplica">REST API Reference for StopReplicationToReplica Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.TagResourceAsync(Amazon.SecretsManager.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Attaches tags to a secret. Tags consist of a key name and a value. Tags are part of
            the secret's metadata. They are not associated with specific versions of the secret.
            This operation appends tags to the existing list of tags.
            
             
            <para>
            For tag quotas and naming restrictions, see <a href="https://docs.aws.amazon.com/general/latest/gr/arg.html#taged-reference-quotas">Service
            quotas for Tagging</a> in the <i>Amazon Web Services General Reference guide</i>.
            </para>
             <important> 
            <para>
            If you use tags as part of your security strategy, then adding or removing a tag can
            change permissions. If successfully completing this operation would result in you
            losing your permissions for this secret, then the operation is blocked and returns
            an Access Denied error.
            </para>
             </important> 
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:TagResource</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.UntagResourceAsync(Amazon.SecretsManager.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes specific tags from a secret.
            
             
            <para>
            This operation is idempotent. If a requested tag is not attached to the secret, no
            error is returned and the secret metadata is unchanged.
            </para>
             <important> 
            <para>
            If you use tags as part of your security strategy, then removing a tag can change
            permissions. If successfully completing this operation would result in you losing
            your permissions for this secret, then the operation is blocked and returns an Access
            Denied error.
            </para>
             </important> 
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:UntagResource</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.UpdateSecretAsync(Amazon.SecretsManager.Model.UpdateSecretRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the details of a secret, including metadata and the secret value. To change
            the secret value, you can also use <a>PutSecretValue</a>.
            
             
            <para>
            To change the rotation configuration of a secret, use <a>RotateSecret</a> instead.
            </para>
             
            <para>
            To change a secret so that it is managed by another service, you need to recreate
            the secret in that service. See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            Manager secrets managed by other Amazon Web Services services</a>.
            </para>
             
            <para>
            We recommend you avoid calling <c>UpdateSecret</c> at a sustained rate of more than
            once every 10 minutes. When you call <c>UpdateSecret</c> to update the secret value,
            Secrets Manager creates a new version of the secret. Secrets Manager removes outdated
            versions when there are more than 100, but it does not remove versions created less
            than 24 hours ago. If you update the secret value more than once every 10 minutes,
            you create more versions than Secrets Manager removes, and you will reach the quota
            for secret versions.
            </para>
             
            <para>
            If you include <c>SecretString</c> or <c>SecretBinary</c> to create a new secret version,
            Secrets Manager automatically moves the staging label <c>AWSCURRENT</c> to the new
            version. Then it attaches the label <c>AWSPREVIOUS</c> to the version that <c>AWSCURRENT</c>
            was removed from.
            </para>
             
            <para>
            If you call this operation with a <c>ClientRequestToken</c> that matches an existing
            version's <c>VersionId</c>, the operation results in an error. You can't modify an
            existing version, you can only create a new version. To remove a version, remove all
            staging labels from it. See <a>UpdateSecretVersionStage</a>.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters except <c>SecretBinary</c> or
            <c>SecretString</c> because it might be logged. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:UpdateSecret</c>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. If you use a customer managed key, you
            must also have <c>kms:GenerateDataKey</c>, <c>kms:Encrypt</c>, and <c>kms:Decrypt</c>
            permissions on the key. If you change the KMS key and you don't have <c>kms:Encrypt</c>
            permission to the new key, Secrets Manager does not re-encrypt existing secret versions
            with the new key. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/security-encryption.html">
            Secret encryption and decryption</a>.
            </para>
             <important> 
            <para>
            When you enter commands in a command shell, there is a risk of the command history
            being accessed or utilities having access to your command parameters. This is a concern
            if the command includes the value of a secret. Learn how to <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/security_cli-exposure-risks.html">Mitigate
            the risks of using command-line tools to store Secrets Manager secrets</a>.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSecret service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSecret service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.DecryptionFailureException">
            Secrets Manager can't decrypt the protected secret text using the provided KMS key.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.EncryptionFailureException">
            Secrets Manager can't encrypt the protected secret text using the provided KMS key.
            Check that the KMS key is available, enabled, and not in an invalid state. For more
            information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            state: Effect on your KMS key</a>.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager quotas.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            The resource policy has syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.PreconditionNotMetException">
            The request failed because you did not complete all the prerequisite steps.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceExistsException">
            A resource with the ID you requested already exists.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/UpdateSecret">REST API Reference for UpdateSecret Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.UpdateSecretVersionStageAsync(Amazon.SecretsManager.Model.UpdateSecretVersionStageRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the staging labels attached to a version of a secret. Secrets Manager uses
            staging labels to track a version as it progresses through the secret rotation process.
            Each staging label can be attached to only one version at a time. To add a staging
            label to a version when it is already attached to another version, Secrets Manager
            first removes it from the other version first and then attaches it to this one. For
            more information about versions and staging labels, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/getting-started.html#term_version">Concepts:
            Version</a>. 
            
             
            <para>
            The staging labels that you specify in the <c>VersionStage</c> parameter are added
            to the existing list of staging labels for the version. 
            </para>
             
            <para>
            You can move the <c>AWSCURRENT</c> staging label to this version by including it in
            this call.
            </para>
             <note> 
            <para>
            Whenever you move <c>AWSCURRENT</c>, Secrets Manager automatically moves the label
            <c>AWSPREVIOUS</c> to the version that <c>AWSCURRENT</c> was removed from.
            </para>
             </note> 
            <para>
            If this action results in the last label being removed from a version, then the version
            is considered to be 'deprecated' and can be deleted by Secrets Manager.
            </para>
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:UpdateSecretVersionStage</c>. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSecretVersionStage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSecretVersionStage service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.LimitExceededException">
            The request failed because it would exceed one of the Secrets Manager quotas.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/UpdateSecretVersionStage">REST API Reference for UpdateSecretVersionStage Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.ValidateResourcePolicyAsync(Amazon.SecretsManager.Model.ValidateResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Validates that a resource policy does not grant a wide range of principals access
            to your secret. A resource-based policy is optional for secrets.
            
             
            <para>
            The API performs three checks when validating the policy:
            </para>
             <ul> <li> 
            <para>
            Sends a call to <a href="https://aws.amazon.com/blogs/security/protect-sensitive-data-in-the-cloud-with-automated-reasoning-zelkova/">Zelkova</a>,
            an automated reasoning engine, to ensure your resource policy does not allow broad
            access to your secret, for example policies that use a wildcard for the principal.
            </para>
             </li> <li> 
            <para>
            Checks for correct syntax in a policy.
            </para>
             </li> <li> 
            <para>
            Verifies the policy does not lock out a caller.
            </para>
             </li> </ul> 
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para>
             
            <para>
             <b>Required permissions: </b> <c>secretsmanager:ValidateResourcePolicy</c> and <c>secretsmanager:PutResourcePolicy</c>.
            For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ValidateResourcePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ValidateResourcePolicy service method, as returned by SecretsManager.</returns>
            <exception cref="T:Amazon.SecretsManager.Model.InternalServiceErrorException">
            An error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidParameterException">
            The parameter name or value is invalid.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.InvalidRequestException">
            A parameter value is not valid for the current state of the resource.
            
             
            <para>
            Possible causes:
            </para>
             <ul> <li> 
            <para>
            The secret is scheduled for deletion.
            </para>
             </li> <li> 
            <para>
            You tried to enable rotation on a secret that doesn't already have a Lambda function
            ARN configured and you didn't include such an ARN as a parameter in this call. 
            </para>
             </li> <li> 
            <para>
            The secret is managed by another service, and you must use that service to update
            it. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/service-linked-secrets.html">Secrets
            managed by other Amazon Web Services services</a>.
            </para>
             </li> </ul>
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.MalformedPolicyDocumentException">
            The resource policy has syntax errors.
            </exception>
            <exception cref="T:Amazon.SecretsManager.Model.ResourceNotFoundException">
            Secrets Manager can't find the resource that you asked for.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/ValidateResourcePolicy">REST API Reference for ValidateResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.SecretsManager.IAmazonSecretsManager.DetermineServiceOperationEndpoint(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Returns the endpoint that will be used for a particular request.
            </summary>
            <param name="request">Request for the desired service operation.</param>
            <returns>The resolved endpoint for the given request.</returns>
        </member>
    </members>
</doc>
